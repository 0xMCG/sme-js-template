/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  HashValidationZoneOfferer,
  HashValidationZoneOffererInterface,
} from "../../../contracts/test/HashValidationZoneOfferer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedOfferRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HashValidationZoneOffererRatifyOrderReverts",
    type: "error",
  },
  {
    inputs: [],
    name: "HashValidationZoneOffererValidateOrderReverts",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualBalance",
        type: "uint256",
      },
    ],
    name: "IncorrectSeaportBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualBalance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "checkedAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "checkedToken",
        type: "address",
      },
    ],
    name: "InvalidERC1155Balance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualBalance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "checkedAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "checkedToken",
        type: "address",
      },
    ],
    name: "InvalidERC20Balance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualBalance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "checkedAddress",
        type: "address",
      },
    ],
    name: "InvalidNativeTokenBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "actualOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "checkedToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "checkedTokenId",
        type: "uint256",
      },
    ],
    name: "InvalidOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
    ],
    name: "ValidateOrderDataHash",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "addDropItemMutation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem",
        name: "item",
        type: "tuple",
      },
    ],
    name: "addExtraItemMutation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "addItemAmountMutation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "called",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dropItemMutations",
    outputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "extraItemMutations",
    outputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem",
        name: "item",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "failureReasons",
    outputs: [
      {
        internalType: "enum OffererZoneFailureReason",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "a",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "b",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "c",
        type: "bytes",
      },
    ],
    name: "generateOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeaportMetadata",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct Schema[]",
        name: "schemas",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "itemAmountMutations",
    outputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderHashToValidateOrderDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "a",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "b",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "previewOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "minimumReceived",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "maximumSpent",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ratifyOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedOfferRecipient",
        type: "address",
      },
    ],
    name: "setExpectedOfferRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "enum OffererZoneFailureReason",
        name: "newFailureReason",
        type: "uint8",
      },
    ],
    name: "setFailureReason",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "fulfiller",
            type: "address",
          },
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct SpentItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ReceivedItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "orderHashes",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ZoneParameters",
        name: "zoneParameters",
        type: "tuple",
      },
    ],
    name: "validateOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "validOrderMagicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60803461008357601f6126be38819003918201601f19168301916001600160401b038311848410176100885780849260209460405283398101031261008357516001600160a01b03811690819003610083576005805460ff191690556000600655600380546001600160a01b03191691909117905560405161261f908161009f8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a71461018357806314a94f6a1461017a57806316beeccc1461017157806317b1f942146101685780632e778efc1461015f5780633e20b653146101565780634b28f9a21461014d57806350f9b6cd14610144578063582d42411461013b578063852c31431461013257806386d9a83b146101295780639891976514610120578063b594b64714610117578063c2daeb741461010e578063c591d1ee14610105578063da748856146100fc578063db70a891146100f35763f4dd92ce0361000e576100ee611406565b61000e565b506100ee61138a565b506100ee611327565b506100ee611277565b506100ee611016565b506100ee610f60565b506100ee610d40565b506100ee610cc3565b506100ee610bf4565b506100ee610b3f565b506100ee61096a565b506100ee61092d565b506100ee6108ba565b506100ee6106f9565b506100ee6103b8565b506100ee6102f5565b506100ee610266565b50346102435760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610243576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361024357807f1be900b10000000000000000000000000000000000000000000000000000000060209214908115610219575b506040519015158152f35b7f3839be19000000000000000000000000000000000000000000000000000000009150143861020e565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff81160361024357565b50346102435760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102435773ffffffffffffffffffffffffffffffffffffffff6004356102b781610248565b167fffffffffffffffffffffffff00000000000000000000000000000000000000006003541617600355600080f35b60043590600282101561024357565b50346102435760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102435761032d6102e6565b6103436040519161033d83610e5f565b826114ce565b600160208201602435815261038b6103728354680100000000000000008110156103ab575b848101855561122f565b94909461039e575b516002811015610391575b8461150a565b51910155005b610399610872565b610385565b6103a66114da565b61037a565b6103b3610e2f565b610368565b5034610243577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602081360112610243576004359067ffffffffffffffff8211610243576101409082360301126102435760040135600081815260076020526040812060099061042a905b5460ff1690565b6104338161131d565b146105cc576104957f1159d6c2ab0c67c2c3ef3bbf500ac044e1f3998cd3fec5b2475d1697ec425fe69160405160208101913690833736905236902080610484856000526004602052604060002090565b556040519081529081906020820190565b0390a133318061058e57600a6104fb610423846104d860017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006005541617600555565b6104eb6104e6600654611663565b600655565b6000526007602052604060002090565b6105048161131d565b03610565576105617f12345678000000000000000000000000000000000000000000000000000000005b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681529081906020820190565b0390f35b6105617f17b1f9420000000000000000000000000000000000000000000000000000000061052e565b6040517f4d3b8ba3000000000000000000000000000000000000000000000000000000008152600060048201526024810191909152604490fd5b0390fd5b60046040517feefb3801000000000000000000000000000000000000000000000000000000008152fd5b919082519283825260005b8481106106405750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610601565b610666604092838352838301906105f6565b906020908181840391015283519182815281810182808560051b8401019601946000925b85841061069b575050505050505090565b9091929394959685806106e8837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0866001960301885286838d5180518452015191818582015201906105f6565b99019401940192959493919061068a565b5034610243576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126107f757604080519061073882610e88565b6021825260207f546573745472616e7366657256616c69646174696f6e5a6f6e654f6666657265818401527f72000000000000000000000000000000000000000000000000000000000000008284015281519361079485610e5f565b60018552805b8281106107d557505090610561916105396107b4866117e4565b51526107be611fca565b906107c8866117e4565b5101525192839283610654565b829084516107e281610e5f565b8381526060838201528282890101520161079a565b80fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600390600054811015610865575b60008052027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630190600090565b61086d6107fa565b610838565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9060028210156108af5752565b6108b7610872565b52565b50346102435760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610243576004356000548110156102435761090260609161082a565b5060ff81541690600260018201549101549061092160405180946108a2565b60208301526040820152f35b50346102435760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610243576020600654604051908152f35b50346102435760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024357602060ff600554166040519015158152f35b9181601f840112156102435782359167ffffffffffffffff8311610243576020808501948460071b01011161024357565b9181601f840112156102435782359167ffffffffffffffff8311610243576020838186019501011161024357565b60061115610a1557565b610a1d610872565b565b9060068210156108af5752565b608090610a3a838251610a1f565b8173ffffffffffffffffffffffffffffffffffffffff918260208201511660208601526040810151604086015260608101516060860152015116910152565b6040908181018282528351809152606090818301936020809601926000915b838310610ae95750505050508281830391015281808451928381520193019160005b828110610ac8575050505090565b909192938260a082610add6001948951610a2c565b01950193929101610aba565b909192939695866080600192858b51610b03838251610a1f565b8085015173ffffffffffffffffffffffffffffffffffffffff168386015286810151878401520151868201529899980197019493019190610a98565b50346102435760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024357610b7a600435610248565b610b85602435610248565b67ffffffffffffffff60443581811161024357610ba69036906004016109ac565b9060643583811161024357610bbf9036906004016109ac565b92909160843594851161024357610bdd610be49536906004016109dd565b5050611c31565b9061056160405192839283610a79565b50346102435760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024357610c2c6102e6565b610c3c6040519161033d83610e88565b600260208201602435815260408301906044358252610c90610c7860005468010000000000000000811015610cb6575b6001810160005561082a565b959095610ca9575b5184811015610c9c575b8561150a565b51600184015551910155005b610ca4610872565b610c8a565b610cb16114da565b610c80565b610cbe610e2f565b610c6c565b50346102435760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024357602435600b81101561024357600435600052600760205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055600080f35b50346102435760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024357610d7b600435610248565b67ffffffffffffffff60243581811161024357610d9c9036906004016109ac565b9060443583811161024357610db59036906004016109ac565b92909160643594851161024357610dd3610be49536906004016109dd565b5050611726565b600590600254811015610e16575b6002600052027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b610e1e6107fa565b610de8565b60068210156108af5752565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610e7b57604052565b610e83610e2f565b604052565b6060810190811067ffffffffffffffff821117610e7b57604052565b60a0810190811067ffffffffffffffff821117610e7b57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e7b57604052565b90604051610f0e81610ea4565b608081936003815491610f2460ff841686610e23565b73ffffffffffffffffffffffffffffffffffffffff809360081c1660208601526001810154604086015260028101546060860152015416910152565b50346102435760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102435760043560025481101561024357600560c091600260005202611014610ffd7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf60ff847f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0154169301610f01565b61100a60405180946108a2565b6020830190610a2c565bf35b50346102435760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102435761104e6102e6565b60a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc360112610243576100199061108c6040519161033d83610e5f565b60046111b9608061109c36611559565b602085019081526110e36110ca60025468010000000000000000811015611222575b60018101600255610dda565b969096611215575b516002811015611208575b8661150a565b61118a60018601915191825160068110156111fb575b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116178155611145602084015173ffffffffffffffffffffffffffffffffffffffff1690565b7fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff0083549260081b169116179055565b6040810151600286015560608101516003860155015173ffffffffffffffffffffffffffffffffffffffff1690565b91019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b611203610872565b6110f9565b611210610872565b6110dd565b61121d6114da565b6110d2565b61122a610e2f565b6110be565b60015481101561126a575b600160005260011b7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b6112726107fa565b61123a565b50346102435760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102435760043560015481101561024357604090600160005260011b7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf760ff827fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6015416910154611316835180936108a2565b6020820152f35b600b1115610a1557565b50346102435760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610243576004356000526007602052602060ff6040600020541660405190600b81101561137e578152f35b611386610872565b8152f35b50346102435760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102435760043560005260046020526020604060002054604051908152f35b9181601f840112156102435782359167ffffffffffffffff8311610243576020808501948460051b01011161024357565b50346102435760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102435767ffffffffffffffff600435818111610243576114579036906004016109ac565b906024359183831161024357366023840112156102435782600401358481116102435736602460a083028601011161024357604435858111610243576114a19036906004016109dd565b93909260643596871161024357602461052e966114c56105619936906004016113d5565b50500191611d42565b60028210156108af5752565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b906002811015611542575b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055565b61154a610872565b611515565b6006111561024357565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc60a0910112610243576040519061159082610ea4565b8160243561159d8161154f565b81526044356115ab81610248565b602082015260643560408201526084356060820152608060a435916115cf83610248565b0152565b60a081360312610243576080604051916115ec83610ea4565b80356115f78161154f565b8352602081013561160781610248565b60208401526040810135604084015260608101356060840152013561162b81610248565b608082015290565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611691570190565b611699611633565b0190565b906040516116aa81610e88565b6040600282946116be60ff825416856114ce565b600181015460208501520154910152565b906040516116dc81610e5f565b60206116f9600183956116f360ff825416866114ce565b01610f01565b910152565b9060405161170b81610e5f565b60206001829461171f60ff825416856114ce565b0154910152565b90611732939291611c31565b9190600080545b8082106117bc57505060006002545b80821061179457505060006001545b8082106117645750509190565b90916117869061178e9561178061177a8661122f565b506116fe565b9161186d565b949092611663565b90611757565b9091611786906117b6956117b06117aa86610dda565b506116cf565b91611a24565b90611748565b9091611786906117de956117d86117d28661082a565b5061169d565b9161181c565b90611739565b6020908051156117f2570190565b6116996107fa565b602091815181101561180f575b60051b010190565b6118176107fa565b611807565b90929180516002811015611860575b61184b57606061184460206040840151930151846117fa565b5101529190565b606061184460206040840151930151866117fa565b611868610872565b61182b565b909291805160028110156118a4575b611891576020015161188d9161191c565b9190565b9260206118a1929401519061191c565b90565b6118ac610872565b61187c565b60209067ffffffffffffffff81116118cb575b60051b0190565b6118d3610e2f565b6118c4565b604051906080820182811067ffffffffffffffff82111761190f575b60405260006060838281528260208201528260408201520152565b611917610e2f565b6118f4565b919082517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101908111611a17575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061198e611978836118b1565b926119866040519485610ec0565b8084526118b1565b0160005b818110611a005750508093600090805193825b8581106119b457505050505050565b8181036119ca575b6119c590611663565b6119a5565b926119f86119c5916119dc86866117fa565b516119e782896117fa565b526119f281886117fa565b50611663565b9390506119bc565b602090611a0b6118d8565b82828601015201611992565b611a1f611633565b61194b565b90929180516002811015611a54575b611a44576020015161188d91611af9565b9260206118a19294015190611af9565b611a5c610872565b611a33565b60405190611a6e82610ea4565b60006080838281528260208201528260408201528260608201520152565b90611a96826118b1565b611aa36040519182610ec0565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611ad182946118b1565b019060005b828110611ae257505050565b602090611aed611a61565b82828501015201611ad6565b91825191611b12600193848101809111611b5b57611a8c565b936000845b611b39575b50611b369293505190611b2f82866117fa565b52836117fa565b50565b8151811015611b5657806119dc611b5092846117fa565b84611b17565b611b1c565b611b63611633565b611a8c565b9190826080910312610243576040516080810181811067ffffffffffffffff821117611bc8575b60405260608082948035611ba28161154f565b84526020810135611bb281610248565b6020850152604081013560408501520135910152565b611bd0610e2f565b611b8f565b90929192611be2816118b1565b90611bf06040519283610ec0565b819481835260208093019160071b84019381851161024357915b848310611c18575050505050565b83608091611c268486611b68565b815201920191611c0a565b91939293611c3e85611a8c565b9460005b818110611c58575050509061188d913691611bd5565b80611c67611ceb928486612001565b611c6f611a61565b50803590611c7c8261154f565b60208082013590611c8c82610248565b73ffffffffffffffffffffffffffffffffffffffff604092611cb9845196611cb388610ea4565b87610e23565b1690840152808201359083015260608091013590820152306080820152611ce0828a6117fa565b526119f281896117fa565b611c42565b906014116102435790601490565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009035818116939260148110611d3357505050565b60140360031b82901b16169150565b9295949195939093333180611f925750611d5a611a61565b5060005b818110611e33575050611dc9949550611d8c60035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8116611e2b5750611db8611dc492611dbe92611cf0565b90611cfe565b60601c90565b612047565b611df960017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006005541617600555565b611e076104e6600654611663565b7ff4dd92ce0000000000000000000000000000000000000000000000000000000090565b915050612047565b80611e4a611e45611eb393858c61201f565b6115d3565b611e87611e6e608083015173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b8151611e9281610a0b565b611e9b81610a0b565b80611eb857506060611eae92015161216d565b611663565b611d5e565b611ec181610a0b565b60018103611efa575081611ef460206060611eae95015192015173ffffffffffffffffffffffffffffffffffffffff1690565b906121ea565b611f0381610a0b565b60028103611f3c575081611f3660206040611eae95015192015173ffffffffffffffffffffffffffffffffffffffff1690565b90612374565b80611f48600392610a0b565b14611f55575b5050611663565b816060611f8b93015190611f856020604083015192015173ffffffffffffffffffffffffffffffffffffffff1690565b9161248b565b3880611f4e565b604490604051907f4d3b8ba3000000000000000000000000000000000000000000000000000000008252600060048301526024820152fd5b6040516020810181811067ffffffffffffffff821117611ff4575b60405260008152906000368137565b611ffc610e2f565b611fe5565b9190811015612012575b60071b0190565b61201a6107fa565b61200b565b9160a09181101561202f57020190565b6120376107fa565b020190565b6118a1903690611b68565b90916120516118d8565b5060005b8181106120625750505050565b806120796120746120a1938588612001565b61203c565b84815161208581610a0b565b61208e81610a0b565b806120a657506060611eae92015161216d565b612055565b6120af81610a0b565b600181036120e2575081611ef460206060611eae95015192015173ffffffffffffffffffffffffffffffffffffffff1690565b6120eb81610a0b565b6002810361211e575081611f3660206040611eae95015192015173ffffffffffffffffffffffffffffffffffffffff1690565b8061212a600392610a0b565b14612136575050611663565b81606061216693015190611f856020604083015192015173ffffffffffffffffffffffffffffffffffffffff1690565b3884611f4e565b908031821161217a575050565b9073ffffffffffffffffffffffffffffffffffffffff8260649331604051937f1190a13400000000000000000000000000000000000000000000000000000000855260048501526024840152166044820152fd5b90816020910312610243575190565b506040513d6000823e3d90fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff8581166004840152602096959394939290841691908781602481865afa908115612367575b60009161234a575b5085116122635750505050509050565b60405190815273ffffffffffffffffffffffffffffffffffffffff83166004820152869550908590829060249082905afa94851561233d575b600095612306575b50506040517fee075b4a0000000000000000000000000000000000000000000000000000000081526004810193909352602483019390935273ffffffffffffffffffffffffffffffffffffffff92831660448301529091166064820152608490fd5b6105c893929550908161232d92903d10612336575b6123258183610ec0565b8101906121ce565b939091856122a4565b503d61231b565b6123456121dd565b61229c565b6123619150883d8a11612336576123258183610ec0565b38612253565b61236f6121dd565b61224b565b6040517f6352211e00000000000000000000000000000000000000000000000000000000815260048101829052929173ffffffffffffffffffffffffffffffffffffffff6020856024818486165afa94851561247e575b600095612442575b50808516908416036123e55750505050565b6040517f38fb386a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152938316602485015290911660448301526064820152608490fd5b90946020823d8211612476575b8161245c60209383610ec0565b810103126107f757505161246f81610248565b93386123d3565b3d915061244f565b6124866121dd565b6123cb565b6040517efdd58e0000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff8681166004840152602483018590529096956020959394909290918416908681604481855afa908115612605575b6000916125e8575b50851161250d575050505050509050565b60405188815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101929092528590829060449082905afa9485156125db575b6000956125b4575b50506040517f17720d600000000000000000000000000000000000000000000000000000000081526004810193909352602483019390935273ffffffffffffffffffffffffffffffffffffffff92831660448301529091166064820152608490fd5b6105c89392955090816125d292903d10612336576123258183610ec0565b93909185612552565b6125e36121dd565b61254a565b6125ff9150873d8911612336576123258183610ec0565b386124fc565b61260d6121dd565b6124f456fea164736f6c6343000811000a";

type HashValidationZoneOffererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HashValidationZoneOffererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HashValidationZoneOfferer__factory extends ContractFactory {
  constructor(...args: HashValidationZoneOffererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    expectedOfferRecipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HashValidationZoneOfferer> {
    return super.deploy(
      expectedOfferRecipient,
      overrides || {}
    ) as Promise<HashValidationZoneOfferer>;
  }
  override getDeployTransaction(
    expectedOfferRecipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(expectedOfferRecipient, overrides || {});
  }
  override attach(address: string): HashValidationZoneOfferer {
    return super.attach(address) as HashValidationZoneOfferer;
  }
  override connect(signer: Signer): HashValidationZoneOfferer__factory {
    return super.connect(signer) as HashValidationZoneOfferer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HashValidationZoneOffererInterface {
    return new utils.Interface(_abi) as HashValidationZoneOffererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HashValidationZoneOfferer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HashValidationZoneOfferer;
  }
}
