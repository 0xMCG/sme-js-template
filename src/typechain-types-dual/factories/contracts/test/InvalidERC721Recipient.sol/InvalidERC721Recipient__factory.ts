/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  InvalidERC721Recipient,
  InvalidERC721RecipientInterface,
} from "../../../../contracts/test/InvalidERC721Recipient.sol/InvalidERC721Recipient";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100155760f0908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c63150b7a0214602857600080fd5b3460d75760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260d75773ffffffffffffffffffffffffffffffffffffffff6004358181160360df576024359081160360d75760643567ffffffffffffffff80821160db573660238301121560db57816004013590811160db573691016024011160d757807fabcd00000000000000000000000000000000000000000000000000000000000060209252f35b5080fd5b8380fd5b8280fdfea164736f6c6343000811000a";

type InvalidERC721RecipientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InvalidERC721RecipientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InvalidERC721Recipient__factory extends ContractFactory {
  constructor(...args: InvalidERC721RecipientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InvalidERC721Recipient> {
    return super.deploy(overrides || {}) as Promise<InvalidERC721Recipient>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InvalidERC721Recipient {
    return super.attach(address) as InvalidERC721Recipient;
  }
  override connect(signer: Signer): InvalidERC721Recipient__factory {
    return super.connect(signer) as InvalidERC721Recipient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InvalidERC721RecipientInterface {
    return new utils.Interface(_abi) as InvalidERC721RecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InvalidERC721Recipient {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InvalidERC721Recipient;
  }
}
