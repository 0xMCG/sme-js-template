/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestContractOffererNativeToken,
  TestContractOffererNativeTokenInterface,
} from "../../../contracts/test/TestContractOffererNativeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "seaport",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OrderUnavailable",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "available",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "required",
        type: "tuple",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "available",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "required",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
    ],
    name: "activateWithCriteria",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extendAvailable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extendRequired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extraAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "minimumReceived",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "maximumSpent",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "generateOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getInventory",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offerable",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "receivable",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeaportMetadata",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct Schema[]",
        name: "schemas",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "previewOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ratifyOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ready",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a03461009457601f611be738819003918201601f19168301916001600160401b038311848410176100995780849260209460405283398101031261009457516001600160a01b03811681036100945760805261ffff196006541660065560006007556000600855604051611b3790816100b08239608051818181610b0e01528181610ceb015281816117900152611aa00152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a7146101475780632e778efc1461013e5780634a29bec214610135578063582d42411461012c5780635d7f850c1461012357806366ff49c51461011a5780636defbf801461011157806375f9ef521461010857806398919765146100ff578063a69ea25c146100f6578063b6f26343146100ed578063b968b399146100e4578063e2d46f98146100db578063f23a6e61146100d25763f4dd92ce0361000e576100cd6111de565b61000e565b506100cd61111b565b506100cd6110d6565b506100cd611073565b506100cd610f51565b506100cd610f14565b506100cd610e7a565b506100cd610e0e565b506100cd610dcc565b506100cd6109ce565b506100cd6106c3565b506100cd6105e3565b506100cd6103d0565b506100cd61031a565b50346102075760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610207576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361020757807f1be900b100000000000000000000000000000000000000000000000000000000602092149081156101dd575b506040519015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386101d2565b600080fd5b600091031261020757565b919082519283825260005b8481106102615750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610222565b61028760409283835283830190610217565b906020908181840391015283519182815281810182808560051b8401019601946000925b8584106102bc575050505050505090565b909192939495968580610309837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0866001960301885286838d518051845201519181858201520190610217565b9901940194019295949391906102ab565b5034610207576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103cd5760408051916103598361081b565b60018352805b6020908181101561038c5783516020926103788261081b565b84825260608183015282870101520161035f565b50505061053961039b836116c7565b51526103a5611ad9565b60206103b0846116c7565b5101526103c96103be611af1565b915192839283610275565b0390f35b80fd5b50346102075760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610207576020600754604051908152f35b73ffffffffffffffffffffffffffffffffffffffff81160361020757565b9181601f840112156102075782359167ffffffffffffffff8311610207576020808501948460071b01011161020757565b9181601f840112156102075782359167ffffffffffffffff8311610207576020838186019501011161020757565b6006111561049457565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9060068210156104945752565b90815180825260208080930193019160005b8281106104f0575050505090565b9091929382608060019287516105078282516104c3565b8084015173ffffffffffffffffffffffffffffffffffffffff16828501526040808201519083015260609081015190820152019501939291016104e2565b610557604092838352838301906104d0565b90602090818184039101528080855193848152019401926000905b83821061058157505050505090565b90919293948360a060019288516105998282516104c3565b8084015173ffffffffffffffffffffffffffffffffffffffff9081168386015286820151878401526060808301519084015260809182015116908201520196019493920190610572565b50346102075760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102075760043561061f8161040d565b61062a60243561040d565b67ffffffffffffffff906044358281116102075761064c90369060040161042b565b50506064358281116102075761066690369060040161042b565b50506084359182116102075761068361068b92369060040161045c565b919050611954565b906103c960405192839283610545565b90916106b26106c0936040845260408401906104d0565b9160208184039101526104d0565b90565b5034610207576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103cd5760065460ff8116159081156107dd575b501561072c5750610713611437565b61071b611437565b905b6103c96040519283928361069b565b6007549061074161073c836118a2565b6114a5565b90805b61074d846118a2565b8110156107855761077e61074d916107636118b8565b61076d82876116dd565b5261077881866116dd565b506113d6565b9050610744565b5091506008549061079861073c836118a2565b925b6107a3836118a2565b8110156107d5576107ce6107a3916107b9611906565b6107c382886116dd565b5261077881876116dd565b905061079a565b50905061071d565b60ff915060081c1638610704565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761083757604052565b61083f6107eb565b604052565b6080810190811067ffffffffffffffff82111761083757604052565b67ffffffffffffffff811161083757604052565b60a0810190811067ffffffffffffffff82111761083757604052565b6020810190811067ffffffffffffffff82111761083757604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761083757604052565b604051906108fa82610874565b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6080910112610207576040519061093382610844565b81600435600681101561020757815260243561094e8161040d565b602082015260443560408201526060606435910152565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c6080910112610207576040519061099c82610844565b81608435600681101561020757815260a4356109b78161040d565b602082015260c4356040820152606060e435910152565b5034610207576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020757610a08366108fc565b610a1136610965565b610104359160065460ff8116908115610dbe575b50610d945760048151610a378161048a565b610a408161048a565b03610bf457610a85610a6c610a6c602084015173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b803b15610207576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810194909452600093848160648183865af18015610be7575b610bd4575b50803b15610bd0576040517fa22cb4650000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16600482015260016024820152610b7a94610b7593928290604490829084905af18015610bc3575b610baa575b506112c1565b61132d565b61001960017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006006541617600655565b80610bb7610bbd92610860565b8061020c565b38610b6f565b610bcb611399565b610b6a565b8380fd5b80610bb7610be192610860565b38610ade565b610bef611399565b610ad9565b9160058351610c028161048a565b610c0b8161048a565b14610c1e575b50610b75610b7a926112c1565b91610c46610a6c610a6c602084015173ffffffffffffffffffffffffffffffffffffffff1690565b606082015193813b15610207576040517ff242432a0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810191909152606481019490945260a06084850152600060a4850181905293848160c48183865af18015610d87575b610d74575b50803b15610bd0576040517fa22cb4650000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16600482015260016024820152610b7a94610b7593928290604490829084905af18015610d67575b610d54575b509250610c11565b80610bb7610d6192610860565b38610d4c565b610d6f611399565b610d47565b80610bb7610d8192610860565b38610cbb565b610d8f611399565b610cb6565b60046040517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b60ff915060081c1638610a25565b50346102075760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020757602060ff600654166040519015158152f35b50346102075760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102075760065460ff811615908115610e6c575b50610d9457610e5e6007546113d6565b6007556002805460011c9055005b60ff915060081c1638610e4e565b50346102075760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020757610eb560043561040d565b67ffffffffffffffff60243581811161020757610ed690369060040161042b565b9060443583811161020757610eef90369060040161042b565b92909160643594851161020757610f0d61068b95369060040161045c565b5050611764565b50346102075760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610207576020600854604051908152f35b506101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020757610f86366108fc565b610f8f36610965565b60065460ff8116908115611065575b50610d94578151916006831015610494576060610b7591610b7a9460ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541691161760005561105161100a602083015173ffffffffffffffffffffffffffffffffffffffff1690565b7fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff006000549260081b16911617600055565b61105e6040820151600155565b0151600255565b60ff915060081c1638610f9e565b50346102075760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102075760065460ff8116159081156110c8575b50610d94576110c36008546113d6565b600855005b60ff915060081c16386110b3565b50346102075760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020757602060ff60065460081c166040519015158152f35b50346102075760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102075761115660043561040d565b61116160243561040d565b60843567ffffffffffffffff81116102075761118190369060040161045c565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b9181601f840112156102075782359167ffffffffffffffff8311610207576020808501948460051b01011161020757565b50346102075760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102075767ffffffffffffffff6004358181116102075761122f90369060040161042b565b50506024358181116102075736602382011215610207578060040135908282116102075760249060a0369302010111610207576044358181116102075761127a90369060040161045c565b5050606435908111610207576112949036906004016111ad565b50506040517ff4dd92ce000000000000000000000000000000000000000000000000000000008152602090f35b8051906006821015610494576060916000547fffffffffffffffffffffff00000000000000000000000000000000000000000060ff74ffffffffffffffffffffffffffffffffffffffff00602086015160081b1693169116171760005560408101516001550151600255565b8051906006821015610494576060916003547fffffffffffffffffffffff00000000000000000000000000000000000000000060ff74ffffffffffffffffffffffffffffffffffffffff00602086015160081b1693169116171760035560408101516004550151600555565b506040513d6000823e3d90fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611404570190565b61140c6113a6565b0190565b60209067ffffffffffffffff811161142a575b60051b0190565b6114326107eb565b611423565b60405161144381610890565b6000815290565b6040908151916114598361081b565b60018352829160005b60208082101561149d5783516020929161147b82610844565b6000825260008183015260008683015260006060830152828801015201611462565b505091925050565b906114af82611410565b6040906114be825191826108ac565b8381527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06114ec8295611410565b019160005b8381106114fe5750505050565b602090825161150c81610844565b6000815282600081830152600085830152600060608301528286010152016114f1565b60409081519161153e8361081b565b60018352829160005b60208082101561149d5783516020929161156082610874565b600082526000818301526000868301526000606083015260006080830152828801015201611547565b9061159382611410565b6040906115a2825191826108ac565b8381527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06115d08295611410565b019160005b8381106115e25750505050565b60209082516115f081610874565b600081528260008183015260008583015260006060830152600060808301528286010152016115d5565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90156116535790565b6106c061161a565b3d156116c2573d9067ffffffffffffffff82116116b5575b604051916116a960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601846108ac565b82523d6000602084013e565b6116bd6107eb565b611673565b606090565b6020908051156116d5570190565b61140c61161a565b60209181518110156116f2575b60051b010190565b6116fa61161a565b6116ea565b608081360312610207576040519061171682610844565b803590600682101561020757606091835260208101356117358161040d565b6020840152604081013560408401520135606082015290565b356106c08161040d565b60068210156104945752565b9290939161177061144a565b9461177961152f565b94600080808080606061178c888861164a565b01357f00000000000000000000000000000000000000000000000000000000000000005af16117b961165b565b501561189a57506117d2916117cd9161164a565b6116ff565b6117db866116c7565b526117e5856116c7565b50606061181561180060206117fa868661164a565b0161174e565b93604061180d828661164a565b01359361164a565b0135906118456118236108ed565b600281529373ffffffffffffffffffffffffffffffffffffffff166020850152565b6040830152606082015230608082015261185e836116c7565b52611868826116c7565b506108fa6101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6006541617600655565b3d81803e3d90fd5b60010190816001116118b057565b6108fa6113a6565b604051906118c582610844565b8173ffffffffffffffffffffffffffffffffffffffff6000546118eb60ff821684611758565b60081c16602082015260015460408201526060600254910152565b6040519061191382610844565b8173ffffffffffffffffffffffffffffffffffffffff60035461193960ff821684611758565b60081c16602082015260045460408201526060600554910152565b906006549160ff831615928315611acb575b508215611a85575b508115611a7b575b50610d945760075461198a61073c826118a2565b6008549261199f61199a856118a2565b611589565b9360005b6119ac856118a2565b8110156119c9576119c26119ac916107b96118b8565b90506119a3565b5092506000906003549273ffffffffffffffffffffffffffffffffffffffff60ff85169460081c169060045492600554945b611a04886118a2565b811015611a7057611a69611a0491611a1a6108ed565b611a248a82611758565b73ffffffffffffffffffffffffffffffffffffffff871660208201526040810188905260608101899052306080820152611a5e828d6116dd565b52610778818c6116dd565b90506119fb565b509450959450505050565b9050151538611976565b90915073ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001691161415903861196e565b60081c60ff16925038611966565b604051611ae581610890565b60008152906000368137565b60405190611afe8261081b565b601e82527f54657374436f6e74726163744f6666657265724e6174697665546f6b656e0000602083015256fea164736f6c6343000811000a";

type TestContractOffererNativeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestContractOffererNativeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestContractOffererNativeToken__factory extends ContractFactory {
  constructor(...args: TestContractOffererNativeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    seaport: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestContractOffererNativeToken> {
    return super.deploy(
      seaport,
      overrides || {}
    ) as Promise<TestContractOffererNativeToken>;
  }
  override getDeployTransaction(
    seaport: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(seaport, overrides || {});
  }
  override attach(address: string): TestContractOffererNativeToken {
    return super.attach(address) as TestContractOffererNativeToken;
  }
  override connect(signer: Signer): TestContractOffererNativeToken__factory {
    return super.connect(signer) as TestContractOffererNativeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestContractOffererNativeTokenInterface {
    return new utils.Interface(_abi) as TestContractOffererNativeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestContractOffererNativeToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestContractOffererNativeToken;
  }
}
