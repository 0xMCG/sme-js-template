/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestInvalidContractOffererRatifyOrder,
  TestInvalidContractOffererRatifyOrderInterface,
} from "../../../contracts/test/TestInvalidContractOffererRatifyOrder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "seaport",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OrderUnavailable",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "available",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "required",
        type: "tuple",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "available",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "required",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
    ],
    name: "activateWithCriteria",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extendAvailable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extendRequired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extraAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "generateOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getInventory",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offerable",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "receivable",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeaportMetadata",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct Schema[]",
        name: "schemas",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "previewOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ratifyOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ready",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0346100a957601f611fde38819003918201601f19168301916001600160401b038311848410176100ae578084926020946040528339810103126100a957516001600160a01b03811681036100a95760805261ffff196006541660065560006007556000600855604051611f1990816100c58239608051818181610587015281816106f00152818161085c01528181610bf601528181610e1c0152818161103201526115950152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816301ffc9a7146117b9575080632e778efc1461160b5780634a29bec2146115ce578063582d4241146113085780635d7f850c146110cf57806366ff49c514610cf35780636defbf8014610cb157806375f9ef5214610c4357806398919765146108ec578063a69ea25c146108af578063b6f2634314610336578063b968b399146102ab578063e2d46f9814610266578063f23a6e61146101d55763f4dd92ce0361001157346101d15760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d15767ffffffffffffffff9080358281116101c95761011e903690830161191f565b50506024358281116101c957366023820112156101c95780820135908382116101cd5760249060a03693020101116101c5576044358281116101c9576101679036908301611950565b5050606435908282116101c957366023830112156101c9578101359182116101c557602490369260051b0101116101c157602090517f59a604da000000000000000000000000000000000000000000000000000000008152f35b5080fd5b8380fd5b8480fd5b8580fd5b8280fd5b5091346102635760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102635761020e6118d4565b506102176118fc565b506084359067ffffffffffffffff8211610263575060209261023b91369101611950565b5050517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b80fd5b5050346101c157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c15760209060ff60065460081c1690519015158152f35b5090346101d157827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d15760065460ff811615908115610328575b5061030257826102fc600854611cd3565b60085580f35b517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b60ff915060081c16386102eb565b5091906101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c15761036d36611bc1565b9261037736611c3e565b90600692835460ff81169081156108a1575b5061030257855184811015610499576104c5574760608701525b8551958487101561049957606086549174ffffffffffffffffffffffffffffffffffffffff00988993602083015160ff7fffffffffffffffffffffff0000000000000000000000000000000000000000009c8d9260081b1693169116171788558381015160015501516002558351908582101561046d57606095969760ff60035492602088015160081b169316911617176003558201519055015160055560017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905580f35b6024876021867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024866021857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85518481101561049957600103610624576020868101516060808901805185517f23b872dd000000000000000000000000000000000000000000000000000000008152338882019081523081880152604081019290925273ffffffffffffffffffffffffffffffffffffffff948516949390918691839182910103818d885af1801561061a57916044918694936105fd575b5051918a875195869485937f095ea7b30000000000000000000000000000000000000000000000000000000085527f0000000000000000000000000000000000000000000000000000000000000000168b85015260248401525af180156105f3576105c5575b50505b6103a3565b816105e492903d106105ec575b6105dc8183611b80565b810190611cbb565b5038806105bd565b503d6105d2565b83513d89823e3d90fd5b61061390853d87116105ec576105dc8183611b80565b5038610557565b86513d8c823e3d90fd5b855184811015610499576002036107755773ffffffffffffffffffffffffffffffffffffffff806020880151169082880151823b156107715783517f23b872dd00000000000000000000000000000000000000000000000000000000815233868201908152306020820152604081019290925290889082908190606001038183875af1801561076757908891610753575b5050813b1561074f57869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af18015610745579086916107315750506103a3565b61073a90611b18565b6101c95784386105bd565b82513d88823e3d90fd5b8680fd5b61075c90611b18565b61074f5786386106b5565b84513d8a823e3d90fd5b8780fd5b855184811015610499576003036105c05773ffffffffffffffffffffffffffffffffffffffff806020880151169082880151606089015190833b1561089d5784517ff242432a000000000000000000000000000000000000000000000000000000008152338782019081523060208201526040810192909252606082019290925260a06080820181905260009082015288908290819060c001038183875af1801561076757908891610753575050813b1561074f57869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af18015610745579086916107315750506103a3565b8880fd5b60ff915060081c1638610389565b5050346101c157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c1576020906008549051908152f35b5090346101d157608092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610263576109276118d4565b50602467ffffffffffffffff81358181116101c557610949903690870161191f565b50506044358181116101c557610962903690870161191f565b50506064359081116101d15761097b9036908601611950565b60065493915060ff841615908115610c34575b8115610bf3575b8115610be6575b50610bbd57600754956001968701968781119788610b91576109bd81611d47565b9760085483018084119283610b66576109da829397959892611dd1565b9b85895b610aef575b505050908392918794936003549773ffffffffffffffffffffffffffffffffffffffff60ff8a169960081c1694815496600554985b610a5d575b508e8e610a598f8f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6101009116176006555192839283611a2f565b0390f35b81610ac4578f86821015610abe5790610ab28f610ab8938e8e8e8e858f610a908a985196610a8a88611acd565b87611eb2565b602086015284015260608301523090820152610aac8383611e9e565b52611e9e565b50611cd3565b8b610a18565b50610a1d565b50506011907f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b81999698949399610b3b57908c82848995941015610b2e57610ab281610b2193610b17611ebe565b610aac8383611e9e565b90919299939498966109de565b50509892939795986109e3565b89896011877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b87876011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5050506011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b505050517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b601f91501615153861099c565b337f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614159150610995565b905060ff8460081c169061098e565b5090346101d157827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d15760065460ff811615908115610ca3575b506103025782610c94600754611cd3565b60075560025460011c60025580f35b60ff915060081c1638610c83565b5050346101c157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c15760209060ff6006541690519015158152f35b509190346101c1576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c157610d2f36611bc1565b92610d3936611c3e565b906101043592600693845460ff81169081156110c1575b5061109a5786518581101561046d578303610f4b5773ffffffffffffffffffffffffffffffffffffffff8060208901511691823b156107715783517f23b872dd00000000000000000000000000000000000000000000000000000000815233868201908152306020820152604081019290925290889082908190606001038183875af1801561076757908891610f37575b5050813b1561074f57869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af1801561074557908691610f23575b50508551958487101561049957606086549174ffffffffffffffffffffffffffffffffffffffff00988993602083015160ff7fffffffffffffffffffffff0000000000000000000000000000000000000000009c8d9260081b1693169116171788558381015160015501516002558351908582101561046d57606095969760ff60035492602088015160081b169316911617176003558201519055015160055560017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905580f35b610f2c90611b18565b6101c9578438610e57565b610f4090611b18565b61074f578638610de1565b86518581101561046d57600514610f63575b506103a3565b73ffffffffffffffffffffffffffffffffffffffff8060208901511691606089015190833b1561089d5784517ff242432a000000000000000000000000000000000000000000000000000000008152338782019081523060208201526040810192909252606082019290925260a06080820181905260009082015288908290819060c001038183875af1801561076757611087575b50813b1561074f57869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af1801561074557908691611073575b50610f5d565b61107c90611b18565b6101c957843861106d565b61109390979197611b18565b9538610ff8565b50517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b60ff915060081c1638610d50565b50346101d157827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d15760065460ff8116159081156112fa575b50156111575750610a59815161112381611b64565b8381529282519061113382611b64565b81525b61114983519484869586528501906119ba565b9083820360208501526119ba565b906007549160019283019384841194856112ce5761117481611d47565b9582865b611290575b50505090919260085481019081811180611264579282949361119f8394611d47565b95826003549673ffffffffffffffffffffffffffffffffffffffff60ff89169860081c1693815495600554975b6111e4575b50505050505050505050610a5990611136565b81611238578b8582101561123257908a611221828e8b8661120d61122c985196610a8a88611b2c565b8c60208701528501528c6060850152611e9e565b52610ab2818d611e9e565b886111cc565b506111d1565b6024846011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024846011877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8161126457828110156112c957906112c18793926112ac611ebe565b6112b6828c611e9e565b52610ab2818b611e9e565b909192611178565b61117d565b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60ff915060081c163861110e565b509190346101c15760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c1576113426118d4565b61134a6118fc565b5067ffffffffffffffff6044358181116101c95761136b903690870161191f565b50506064358181116101c957611384903690870161191f565b50506084359081116101c55761139d9036908601611950565b90506006549160ff8316159283156115c0575b50821561157a575b50811561156d575b50611545576007549260019384019283851194856112ce576113e185611d47565b946008548201938483119182611519576113fe8692959496611dd1565b9884875b6114a9575b5050509082918593926003549573ffffffffffffffffffffffffffffffffffffffff60ff88169760081c1693815495600554975b61144e575b8a5180610a598f8f83611a2f565b81611238578c858210156114a35790610ab28161149d938c8f8061147e8e92519361147885611acd565b84611eb2565b8c60208401528201528c6060820152306080820152610aac8383611e9e565b8961143b565b50611440565b8197959693976114ed5790818387949310156114e257808b6112216114d6936114d0611ebe565b92611e9e565b90919297939695611402565b509692959496611407565b6024876011867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024856011847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9050517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b601f9150161515386113c0565b90915073ffffffffffffffffffffffffffffffffffffffff807f0000000000000000000000000000000000000000000000000000000000000000169116141590386113b8565b60081c60ff169250386113b0565b5050346101c157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c1576020906007549051908152f35b509190346101c157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c157805161164781611b48565b600190818152835b6020808210156116b65784519085820182811067ffffffffffffffff82111761168a578652868252606082820152838301015260200161164f565b60248860418b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b828585886105396116c685611e62565b51528251926116d484611b64565b818452602093846116e487611e62565b5101528051936116f385611b48565b601385527f54657374436f6e74726163744f666665726572000000000000000000000000008186015261172e82519583875283870190611876565b858103828701528651928382528282019083808660051b850101990195925b85841061175a57888a0389f35b9091929394959685806117a68c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086869f0301885286838d518051845201519181858201520190611876565b9b9901979695919091019301919061174d565b925050346101d15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d157357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101d157602092507f1be900b100000000000000000000000000000000000000000000000000000000811490811561184c575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438611845565b919082519283825260005b8481106118c05750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201611881565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036118f757565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036118f757565b9181601f840112156118f75782359167ffffffffffffffff83116118f7576020808501948460071b0101116118f757565b9181601f840112156118f75782359167ffffffffffffffff83116118f757602083818601950101116118f757565b90600682101561198b5752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90815180825260208080930193019160005b8281106119da575050505090565b9091929382608060019287516119f182825161197e565b8084015173ffffffffffffffffffffffffffffffffffffffff16828501526040808201519083015260609081015190820152019501939291016119cc565b611a41604092838352838301906119ba565b90602090818184039101528080855193848152019401926000905b838210611a6b57505050505090565b90919293948360a06001928851611a8382825161197e565b8084015173ffffffffffffffffffffffffffffffffffffffff9081168386015286820151878401526060808301519084015260809182015116908201520196019493920190611a5c565b60a0810190811067ffffffffffffffff821117611ae957604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111611ae957604052565b6080810190811067ffffffffffffffff821117611ae957604052565b6040810190811067ffffffffffffffff821117611ae957604052565b6020810190811067ffffffffffffffff821117611ae957604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611ae957604052565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60809101126118f75760405190611bf882611b2c565b8160043560068110156118f757815260243573ffffffffffffffffffffffffffffffffffffffff811681036118f757602082015260443560408201526060606435910152565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c60809101126118f75760405190611c7582611b2c565b8160843560068110156118f757815260a43573ffffffffffffffffffffffffffffffffffffffff811681036118f757602082015260c4356040820152606060e435910152565b908160209103126118f7575180151581036118f75790565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611d005760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b67ffffffffffffffff8111611ae95760051b60200190565b90611d5182611d2f565b604090611d6082519182611b80565b8381527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611d8e8295611d2f565b019160005b838110611da05750505050565b6020908251611dae81611b2c565b600081528260008183015260008583015260006060830152828601015201611d93565b90611ddb82611d2f565b604090611dea82519182611b80565b8381527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611e188295611d2f565b019160005b838110611e2a5750505050565b6020908251611e3881611acd565b60008152826000818301526000858301526000606083015260006080830152828601015201611e1d565b805115611e6f5760200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8051821015611e6f5760209160051b010190565b600682101561198b5752565b60405190611ecb82611b2c565b8173ffffffffffffffffffffffffffffffffffffffff600054611ef160ff821684611eb2565b60081c1660208201526001546040820152606060025491015256fea164736f6c6343000811000a";

type TestInvalidContractOffererRatifyOrderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestInvalidContractOffererRatifyOrderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestInvalidContractOffererRatifyOrder__factory extends ContractFactory {
  constructor(...args: TestInvalidContractOffererRatifyOrderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    seaport: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestInvalidContractOffererRatifyOrder> {
    return super.deploy(
      seaport,
      overrides || {}
    ) as Promise<TestInvalidContractOffererRatifyOrder>;
  }
  override getDeployTransaction(
    seaport: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(seaport, overrides || {});
  }
  override attach(address: string): TestInvalidContractOffererRatifyOrder {
    return super.attach(address) as TestInvalidContractOffererRatifyOrder;
  }
  override connect(
    signer: Signer
  ): TestInvalidContractOffererRatifyOrder__factory {
    return super.connect(
      signer
    ) as TestInvalidContractOffererRatifyOrder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestInvalidContractOffererRatifyOrderInterface {
    return new utils.Interface(
      _abi
    ) as TestInvalidContractOffererRatifyOrderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestInvalidContractOffererRatifyOrder {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestInvalidContractOffererRatifyOrder;
  }
}
