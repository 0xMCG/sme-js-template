/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  HashCalldataContractOfferer,
  HashCalldataContractOffererInterface,
} from "../../../contracts/test/HashCalldataContractOfferer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "seaport",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HashCalldataContractOffererGenerateOrderReverts",
    type: "error",
  },
  {
    inputs: [],
    name: "HashCalldataContractOffererRatifyOrderReverts",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokenTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
    ],
    name: "GenerateOrderDataHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
    ],
    name: "RatifyOrderDataHash",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "addDropItemMutation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem",
        name: "item",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "addExtraItemMutation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "addItemAmountMutation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dropItemMutations",
    outputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "extraItemMutations",
    outputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem",
        name: "item",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "failureReasons",
    outputs: [
      {
        internalType: "enum OffererZoneFailureReason",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fulfiller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "a",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "b",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "c",
        type: "bytes",
      },
    ],
    name: "generateOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeaportMetadata",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct Schema[]",
        name: "schemas",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "itemAmountMutations",
    outputs: [
      {
        internalType: "enum Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderHashToGenerateOrderDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderHashToRatifyOrderDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "a",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "b",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "previewOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "contractNonce",
        type: "uint256",
      },
    ],
    name: "ratifyOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedOfferRecipient",
        type: "address",
      },
    ],
    name: "setExpectedOfferRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "enum OffererZoneFailureReason",
        name: "newFailureReason",
        type: "uint8",
      },
    ],
    name: "setFailureReason",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seaportAddress",
        type: "address",
      },
    ],
    name: "setSeaportAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60803461007457601f61237e38819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600480546001600160a01b0319169190911790556040516122ee90816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a71461018357806312c68a0f1461017a57806314a94f6a146101715780632e778efc146101685780633e20b6531461015f578063582d4241146101565780637d27bebf1461014d57806386d9a83b14610144578063989197651461013b578063b594b64714610132578063b82ceea814610129578063c591d1ee14610120578063da74885614610117578063e67ece911461010e578063f23a6e6114610105578063f4dd92ce146100fc578063f9cd855a146100f35763fe2852d70361000e576100ee6111c8565b61000e565b506100ee6110f4565b506100ee610ffb565b506100ee610f38565b506100ee610eb8565b506100ee610e55565b506100ee610d79565b506100ee610c5b565b506100ee610b6b565b506100ee61092f565b506100ee6108b2565b506100ee610867565b506100ee6107ae565b506100ee6105b1565b506100ee6103fe565b506100ee61027b565b506100ee610212565b503461020d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361020d576020907f1be900b10000000000000000000000000000000000000000000000000000000060405191148152f35b600080fd5b503461020d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d5760043560005260076020526020604060002054604051908152f35b73ffffffffffffffffffffffffffffffffffffffff81160361020d57565b503461020d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d5773ffffffffffffffffffffffffffffffffffffffff6004356102cc8161025d565b167fffffffffffffffffffffffff00000000000000000000000000000000000000006005541617600555600080f35b919082519283825260005b8481106103455750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610306565b61036b604092838352838301906102fb565b906020908181840391015283519182815281810182808560051b8401019601946000925b8584106103a0575050505050505090565b9091929394959685806103ed837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0866001960301885286838d5180518452015191818582015201906102fb565b99019401940192959493919061038f565b503461020d576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104db57604080519061043d82610a4e565b601f825260207f5465737443616c6c6461746148617368436f6e74726163744f666665726572008184015281519361047485610a4e565b60018552805b8281106104b9575050906104b59161053961049486611c65565b515261049e61152d565b906104a886611c65565b5101525192839283610359565b0390f35b829084516104c681610a4e565b8381526060838201528282890101520161047a565b80fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600054811015610548575b6000805260021b7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630190600090565b6105506104de565b610519565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002111561058f57565b610597610555565b565b9060028210156105a65752565b6105ae610555565b52565b503461020d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d5760043560005481101561020d576105f960809161050e565b5060ff81541690600181015490600360028201549101549161061e6040518095610599565b602084015260408301526060820152f35b9181601f8401121561020d5782359167ffffffffffffffff831161020d576020808501948460071b01011161020d57565b9181601f8401121561020d5782359167ffffffffffffffff831161020d576020838186019501011161020d57565b9060068210156105a65752565b6080906106a983825161068e565b8173ffffffffffffffffffffffffffffffffffffffff918260208201511660208601526040810151604086015260608101516060860152015116910152565b6040908181018282528351809152606090818301936020809601926000915b8383106107585750505050508281830391015281808451928381520193019160005b828110610737575050505090565b909192938260a08261074c600194895161069b565b01950193929101610729565b909192939695866080600192858b5161077283825161068e565b8085015173ffffffffffffffffffffffffffffffffffffffff168386015286810151878401520151868201529899980197019493019190610707565b503461020d5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d576004356107ea8161025d565b6107f560243561025d565b67ffffffffffffffff9060443582811161020d5761081790369060040161062f565b60649291923584811161020d5761083290369060040161062f565b93909260843595861161020d57610850610857963690600401610660565b5050611a74565b906104b5604051928392836106e8565b503461020d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d5760043560005260066020526020604060002054604051908152f35b503461020d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d57602435600b81101561020d57600435600052600360205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055600080f35b503461020d5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d5761096a60043561025d565b67ffffffffffffffff60243581811161020d5761098b90369060040161062f565b9060443583811161020d576109a490369060040161062f565b92909160643594851161020d576109c2610857953690600401610660565b50506115e3565b600690600254811015610a05575b6002600052027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b610a0d6104de565b6109d7565b60068210156105a65752565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610a6a57604052565b610a72610a1e565b604052565b60a0810190811067ffffffffffffffff821117610a6a57604052565b6060810190811067ffffffffffffffff821117610a6a57604052565b6080810190811067ffffffffffffffff821117610a6a57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610a6a57604052565b90604051610b1981610a77565b608081936003815491610b2f60ff841686610a12565b73ffffffffffffffffffffffffffffffffffffffff809360081c1660208601526001810154604086015260028101546060860152015416910152565b503461020d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d5760043560025481101561020d57600660e09160026000520260ff817f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01541690610c457f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad3610c2a7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf8401610b0c565b92015491610c3b6040518095610599565b602084019061069b565b60c0820152f35b60043590600282101561020d57565b503461020d5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d57610c93610c4c565b610ca960405191610ca383610a93565b826112a7565b600260208201602435815260408301906044358252610cfd610ce560015468010000000000000000811015610d23575b60018101600155610d30565b959095610d16575b5184811015610d09575b856112e3565b51600184015551910155005b610d11610555565b610cf7565b610d1e6112b3565b610ced565b610d2b610a1e565b610cd9565b600390600154811015610d6c575b6001600052027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b610d746104de565b610d3e565b503461020d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d5760043560015481101561020d57600360609160016000520260ff817fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6015416907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf87fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015491015490610e3f6040518094610599565b60208301526040820152f35b600b111561058f57565b503461020d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d576004356000526003602052602060ff6040600020541660405190600b811015610eac578152f35b610eb4610555565b8152f35b503461020d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d5773ffffffffffffffffffffffffffffffffffffffff600435610f098161025d565b167fffffffffffffffffffffffff00000000000000000000000000000000000000006004541617600455600080f35b503461020d5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d57610f7360043561025d565b610f7e60243561025d565b60843567ffffffffffffffff811161020d57610f9e903690600401610660565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b9181601f8401121561020d5782359167ffffffffffffffff831161020d576020808501948460051b01011161020d57565b503461020d5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d5767ffffffffffffffff60043581811161020d5761104c90369060040161062f565b505060243581811161020d573660238201121561020d5780600401359082821161020d5760249060a036930201011161020d5760443581811161020d57611097903690600401610660565b505060643590811161020d576110b1903690600401610fca565b50506104b56110c1608435612062565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681529081906020820190565b503461020d5760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d5761112c610c4c565b60a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261020d576100199061116a60405191610ca383610a93565b60405161117681610a77565b60243561118281611328565b81526044356111908161025d565b60208201526064356040820152608435606082015260a4356111b18161025d565b6080820152602082015260c4356040820152611332565b503461020d5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020d57611200610c4c565b61121060405191610ca383610aaf565b60036020820160243581526040830160443581526060840191606435835261126e6112556000546801000000000000000081101561129a575b6001810160005561050e565b96909661128d575b516002811015611280575b866112e3565b51600185015551600284015551910155005b611288610555565b611268565b6112956112b3565b61125d565b6112a2610a1e565b611249565b60028210156105a65752565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b90600281101561131b575b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055565b611323610555565b6112ee565b6006111561020d57565b6005604061135a600254680100000000000000008110156114bb575b600181016002556109c9565b9390936114ae575b61137681516002811015610d0957856112e3565b61149a611456608060018701611428602086015191825160068110156114a1575b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691161781556113e3602084015173ffffffffffffffffffffffffffffffffffffffff1690565b7fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff0083549260081b169116179055565b85810151600289015560608101516003890155015173ffffffffffffffffffffffffffffffffffffffff1690565b600486019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b0151910155565b6114a9610555565b611397565b6114b66112b3565b611362565b6114c3610a1e565b61134e565b9081602091031261020d575190565b506040513d6000823e3d90fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111611520575b01160190565b611528610a1e565b61151a565b6040516020810181811067ffffffffffffffff821117611557575b60405260008152906000368137565b61155f610a1e565b611548565b9061156e826114e4565b61157b6040519182610acb565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06115a982946114e4565b0190602036910137565b3d156115de573d906115c4826114e4565b916115d26040519384610acb565b82523d6000602084013e565b606090565b92919061162461160b61160b60045473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b6040517fa900866b00000000000000000000000000000000000000000000000000000000815230600482015290602090829060249082905afa90811561180c575b6000916117de575b503060601b1893600161169461168d876000526003602052604060002090565b5460ff1690565b61169d81610e4b565b036116cc5760046040517feb3f9e55000000000000000000000000000000000000000000000000000000008152fd5b60026116e561168d876000526003602052604060002090565b6116ee81610e4b565b146117d0577f957ff096bbd71fc33d7b79d2193b6131c1932e7d0562eb129572dd98f7a4cdbd61175b9561172136611564565b602081019036600083375190209081611744826000526006602052604060002090565b55604080519182526020820192909252a133611a74565b9190919060008080808661179361178d61160b61160b60045473ffffffffffffffffffffffffffffffffffffffff1690565b9161226c565b905af161179e6115b3565b50156117a657565b60046040517f3022f2e4000000000000000000000000000000000000000000000000000000008152fd5b631234567860005260206000f35b6117ff915060203d8111611805575b6117f78183610acb565b8101906114c8565b3861166d565b503d6117ed565b6118146114d7565b611665565b1561182057565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4861736843616c6c64617461436f6e74726163744f6666657265723a2063616c60448201527f6c6572206e6f7420736561706f727400000000000000000000000000000000006064820152fd5b60209067ffffffffffffffff81116118be575b60051b0190565b6118c6610a1e565b6118b7565b9291926118d7826118a4565b6040926118e684519283610acb565b819581835260208093019160071b84019381851161020d57915b84831061190f57505050505050565b60808383031261020d5783608091875161192881610aaf565b853561193381611328565b8152828601356119428161025d565b83820152888601358982015260608087013590820152815201920191611900565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146119c1570190565b6119c9611963565b0190565b906040516119da81610aaf565b6060600382946119ee60ff825416856112a7565b60018101546020850152600281015460408501520154910152565b90604051611a1681610a93565b604060058294611a2a60ff825416856112a7565b611a3660018201610b0c565b60208501520154910152565b90604051611a4f81610a93565b604060028294611a6360ff825416856112a7565b600181015460208501520154910152565b611b1e929594611b1691611ac173ffffffffffffffffffffffffffffffffffffffff9182611ab760045473ffffffffffffffffffffffffffffffffffffffff1690565b1692168214611819565b6040517fa900866b00000000000000000000000000000000000000000000000000000000815230600482015290602090829060249082905afa908115611c58575b600091611c3a575b503060601b18946121be565b9436916118cb565b9060008054905b818110611bee5750506000906002918254905b818110611ba25750506001549160005b838110611b5757505050509190565b8282611b6283610d30565b50015414611b79575b611b7490611993565b611b48565b93611b9a90611b7497611b94611b8e88610d30565b50611a42565b91611d29565b965093611b6b565b826005611bae836109c9565b50015414611bc5575b611bc090611993565b611b38565b93611be690611bc097611be0611bda886109c9565b50611a09565b91611e93565b965093611bb7565b826003611bfa8361050e565b50015414611c11575b611c0c90611993565b611b25565b92611c3290611c0c96611c2c611c268761050e565b506119cd565b91611c9d565b955092611c03565b611c52915060203d8111611805576117f78183610acb565b38611b0a565b611c606114d7565b611b02565b602090805115611c73570190565b6119c96104de565b6020918151811015611c90575b60051b010190565b611c986104de565b611c88565b90929180516002811015611d1c575b611cb581610585565b1580611d0e575b15611cdd576060611cd66020604084015193015184611c7b565b5101529190565b8351906020810151809211611cf3575b50509190565b611d04604060609201519286611c7b565b5101523880611ced565b508151602082015110611cbc565b611d24610555565b611cac565b90929180516002811015611d60575b611d4d5760200151611d4991611d6d565b9190565b926020611d5d9294015190611d6d565b90565b611d68610555565b611d38565b919082517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101908111611e86575b611da5816118a4565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611de1604092611dd984519586610acb565b8085526118a4565b019060005b828110611e55575050508093600090805193825b858110611e0957505050505050565b818103611e1f575b611e1a90611993565b611dfa565b92611e4d611e1a91611e318686611c7b565b51611e3c8289611c7b565b52611e478188611c7b565b50611993565b939050611e11565b6020908251611e6381610aaf565b600081528260008183015260008583015260006060830152828701015201611de6565b611e8e611963565b611d9c565b90929180516002811015611ec3575b611eb35760200151611d4991611f68565b926020611d5d9294015190611f68565b611ecb610555565b611ea2565b60405190611edd82610a77565b60006080838281528260208201528260408201528260608201520152565b90611f05826118a4565b611f126040519182610acb565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611f4082946118a4565b019060005b828110611f5157505050565b602090611f5c611ed0565b82828501015201611f45565b91825191611f81600193848101809111611fca57611efb565b936000845b611fa8575b50611fa59293505190611f9e8286611c7b565b5283611c7b565b50565b8151811015611fc55780611e31611fbf9284611c7b565b84611f86565b611f8b565b611fd2611963565b611efb565b15611fde57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4861736843616c6c64617461436f6e74726163744f6666657265723a2072617460448201527f6966792063616c6c6572206e6f7420736561706f7274000000000000000000006064820152fd5b61208e61208761160b60045473ffffffffffffffffffffffffffffffffffffffff1690565b3314611fd7565b3060601b1860036120ac61168d836000526003602052604060002090565b6120b581610e4b565b146121945761213e61168d6008927f43fdfdee2628d6d95e8975a4a84da96e737a679ce1890833eff9f111a331375c61212b6120f036611564565b6020810190366000833751902080612112856000526007602052604060002090565b5560408051858152602081019290925290918291820190565b0390a16000526003602052604060002090565b61214781610e4b565b03612170577f123456780000000000000000000000000000000000000000000000000000000090565b7ff4dd92ce0000000000000000000000000000000000000000000000000000000090565b60046040517f138fd50c000000000000000000000000000000000000000000000000000000008152fd5b906121c881611efb565b9160005b8281106121d95750505090565b806122679160071b83016121eb611ed0565b508035906121f882611328565b602080820135906122088261025d565b73ffffffffffffffffffffffffffffffffffffffff60409261223584519661222f88610a77565b87610a12565b169084015280820135908301526060809101359082015230608082015261225c8287611c7b565b52611e478186611c7b565b6121cc565b9060009160005b81518110156122dd576122868183611c7b565b51805160068110156122d0575b156122a8575b506122a390611993565b612273565b9360606122a39295015181018091116122c3575b9390612299565b6122cb611963565b6122bc565b6122d8610555565b612293565b505056fea164736f6c6343000811000a";

type HashCalldataContractOffererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HashCalldataContractOffererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HashCalldataContractOfferer__factory extends ContractFactory {
  constructor(...args: HashCalldataContractOffererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    seaport: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HashCalldataContractOfferer> {
    return super.deploy(
      seaport,
      overrides || {}
    ) as Promise<HashCalldataContractOfferer>;
  }
  override getDeployTransaction(
    seaport: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(seaport, overrides || {});
  }
  override attach(address: string): HashCalldataContractOfferer {
    return super.attach(address) as HashCalldataContractOfferer;
  }
  override connect(signer: Signer): HashCalldataContractOfferer__factory {
    return super.connect(signer) as HashCalldataContractOfferer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HashCalldataContractOffererInterface {
    return new utils.Interface(_abi) as HashCalldataContractOffererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HashCalldataContractOfferer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HashCalldataContractOfferer;
  }
}
