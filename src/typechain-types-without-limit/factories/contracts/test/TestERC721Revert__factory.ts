/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestERC721Revert,
  TestERC721RevertInterface,
} from "../../../contracts/test/TestERC721Revert";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080346200030d576001600160401b039060409080820183811182821017620002f757825260078152602092665465737437323160c81b84830152825183810181811083821117620002f7578452600681526554535437323160d01b85820152825190828211620002f75760008054926001958685811c95168015620002ec575b89861014620002d8578190601f9586811162000285575b5089908683116001146200022157849262000215575b5050600019600383901b1c191690861b1781555b8151938411620002015784548581811c91168015620001f6575b88821014620001e2578381116200019a575b5086928411600114620001345783949596509262000128575b5050600019600383901b1c191690821b1790555b51610dd69081620003138239f35b01519050388062000106565b9190601f1984169685845280842093905b88821062000182575050838596971062000168575b505050811b0190556200011a565b015160001960f88460031b161c191690553880806200015a565b80878596829496860151815501950193019062000145565b8582528782208480870160051c8201928a8810620001d8575b0160051c019086905b828110620001cc575050620000ed565b838155018690620001bc565b92508192620001b3565b634e487b7160e01b82526022600452602482fd5b90607f1690620000db565b634e487b7160e01b81526041600452602490fd5b015190503880620000ad565b8480528a85208994509190601f198416865b8d8282106200026e575050841162000254575b505050811b018155620000c1565b015160001960f88460031b161c1916905538808062000246565b8385015186558c9790950194938401930162000233565b9091508380528984208680850160051c8201928c8610620002ce575b918a91869594930160051c01915b828110620002bf57505062000097565b8681558594508a9101620002af565b92508192620002a1565b634e487b7160e01b83526022600452602483fd5b94607f169462000080565b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610b5b5750816306fdde0314610a80578163081812fc14610a25578163095ea7b3146108e057816323b872dd146106a757816340c10f191461074657816342842e0e146106a75781636352211e146105e457816370a082311461051b57816395d89b41146103ca578163a22cb465146102fb578163b88d4fde146101f1578163c87b56dd1461013a575063e985e9c5146100bf57600080fd5b3461013657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365760ff816020936100fb610d1e565b610103610d46565b73ffffffffffffffffffffffffffffffffffffffff91821683526005875283832091168252855220549151911615158152f35b5080fd5b8383346101365760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610136578051918183019083821067ffffffffffffffff8311176101c557506101c193508152600882527f746f6b656e55524900000000000000000000000000000000000000000000000060208301525191829182610cb8565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b905082346102f45760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f45761022b610d1e565b50610234610d46565b5060643567ffffffffffffffff8082116102f757366023830112156102f757818401359081116102f757369101602401116102f4575060206101449251917f08c379a000000000000000000000000000000000000000000000000000000000835282015261010060248201527f61616161616161616161616161616161616161616161616161616161616161618060448301528060648301528060848301528060a48301528060c48301528060e483015280610104830152610124820152fd5b80fd5b8280fd5b50503461013657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013657610333610d1e565b90602435908115158092036103c657338452600560205273ffffffffffffffffffffffffffffffffffffffff8185209316928385526020528084207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b8380fd5b919050346102f757827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f75780519183600180549182821c928281168015610511575b60209586861082146104e557508488529081156104a5575060011461044d575b6101c18686610443828b0383610c48565b5191829182610cb8565b9295508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061049257505050826101c194610443928201019438610432565b8054868501880152928601928101610475565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b8301019250610443826101c138610432565b8360226024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f1693610412565b839150346101365760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365773ffffffffffffffffffffffffffffffffffffffff61056a610d1e565b169081156105875760208480858581526003845220549051908152f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152fd5b905082346102f45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f4578273ffffffffffffffffffffffffffffffffffffffff9183358152600260205220541690811561064a575060209151908152f35b60649060208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600a60248201527f4e4f545f4d494e544544000000000000000000000000000000000000000000006044820152fd5b905082346102f457506020610144926106bf36610d69565b50505051917f08c379a000000000000000000000000000000000000000000000000000000000835282015261010060248201527f61616161616161616161616161616161616161616161616161616161616161618060448301528060648301528060848301528060a48301528060c48301528060e483015280610104830152610124820152fd5b8391503461013657827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365761077f610d1e565b6024359173ffffffffffffffffffffffffffffffffffffffff80921691821561088357838552600260205285852054166108265750602093818452600385528084206001815401905582845260028552808420827fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905551927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a460018152f35b60649060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152fd5b60648260208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152fd5b9050346102f757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f757610918610d1e565b9060243592838552600260205273ffffffffffffffffffffffffffffffffffffffff90818187205416928333148015610a07575b156109ab578587526020528520921691827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152fd5b50838752600560205281872033885260205260ff828820541661094c565b9050346102f75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f757816020938273ffffffffffffffffffffffffffffffffffffffff9335825285522054169051908152f35b919050346102f757827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f7578051918380549060019082821c928281168015610b51575b60209586861082146104e557508488529081156104a55750600114610af9576101c18686610443828b0383610c48565b8080949750527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610b3e57505050826101c194610443928201019438610432565b8054868501880152928601928101610b21565b93607f1693610ac9565b8491346102f75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f757357fffffffff0000000000000000000000000000000000000000000000000000000081168091036102f757602092507f01ffc9a7000000000000000000000000000000000000000000000000000000008114908115610c1e575b8115610bf4575b5015158152f35b7f5b5e139f0000000000000000000000000000000000000000000000000000000091501483610bed565b7f80ac58cd0000000000000000000000000000000000000000000000000000000081149150610be6565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c8957604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60208082528251818301819052939260005b858110610d0a575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201610cca565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610d4157565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610d4157565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6060910112610d415773ffffffffffffffffffffffffffffffffffffffff906004358281168103610d4157916024359081168103610d4157906044359056fea164736f6c6343000811000a";

type TestERC721RevertConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC721RevertConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC721Revert__factory extends ContractFactory {
  constructor(...args: TestERC721RevertConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestERC721Revert> {
    return super.deploy(overrides || {}) as Promise<TestERC721Revert>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC721Revert {
    return super.attach(address) as TestERC721Revert;
  }
  override connect(signer: Signer): TestERC721Revert__factory {
    return super.connect(signer) as TestERC721Revert__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC721RevertInterface {
    return new utils.Interface(_abi) as TestERC721RevertInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC721Revert {
    return new Contract(address, _abi, signerOrProvider) as TestERC721Revert;
  }
}
