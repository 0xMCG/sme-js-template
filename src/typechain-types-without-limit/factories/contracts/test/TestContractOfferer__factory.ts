/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestContractOfferer,
  TestContractOffererInterface,
} from "../../../contracts/test/TestContractOfferer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "seaport",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OrderUnavailable",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "available",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "required",
        type: "tuple",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "available",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "required",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
    ],
    name: "activateWithCriteria",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extendAvailable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extendRequired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extraAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "generateOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getInventory",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offerable",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "receivable",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeaportMetadata",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct Schema[]",
        name: "schemas",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "previewOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "orderHashes",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ratifyOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ready",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0346100a957601f6121d738819003918201601f19168301916001600160401b038311848410176100ae578084926020946040528339810103126100a957516001600160a01b03811681036100a95760805261ffff19600654166006556000600755600060085560405161211290816100c58239608051818181610785015281816108ee01528181610a5601528181610def015281816110140152818161122a015261178e0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260049081361015610022575b505050361561002057600080fd5b005b600092833560e01c90816301ffc9a7146119b2575080632e778efc146118045780634a29bec2146117c7578063582d4241146115015780635d7f850c146112c757806366ff49c514610eeb5780636defbf8014610ea957806375f9ef5214610e3c5780639891976514610ae6578063a69ea25c14610aa9578063b6f2634314610534578063b968b399146104aa578063e2d46f9814610465578063f23a6e61146103d45763f4dd92ce0361001257346103d05760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d05767ffffffffffffffff82358181116103c85761011e9036908501611b18565b505060249283358281116103cc57366023820112156103cc5780820135908382116103c457859060a03693020101116103c857604480358381116103c4576101699036908401611b49565b9560649485358181116103c057366023820112156103c05780860135918083116103bc57600590368585841b850101116103b85760209a8b8111806103ad575b6101d6575b8b8b517ff4dd92ce000000000000000000000000000000000000000000000000000000008152f35b8601958b818803126103a95780359182116103a957019a858c96601f80980112156103a5578b8d8c9d9e9c9b9c359161021a61021184611f28565b9d519d8e611d79565b828d52808d0192861b8201019283116103a157908e809201905b8382106103925750505050885198848a0361031157815b8a811061025c57508c9b9a506101ae565b6102668183612097565b51868210156102e6578782861b870101350361028a5761028590611ecc565b61024b565b5050505050507f526576657274206f6e20756e6578706563746564206f72646572206861736800939450878751957f08c379a0000000000000000000000000000000000000000000000000000000008752860152840152820152fd5b878460328d7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b508a517f08c379a00000000000000000000000000000000000000000000000000000000081528089018d90526028818701527f526576657274206f6e20756e6578706563746564206f72646572206861736865818901527f73206c656e677468000000000000000000000000000000000000000000000000818c0152608490fd5b81358152908201908201610234565b8380fd5b5080fd5b8c80fd5b50601f8116156101a9565b8b80fd5b8a80fd5b8980fd5b8680fd5b8480fd5b8580fd5b8280fd5b5082346104625760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104625761040d611acd565b50610416611af5565b506084359067ffffffffffffffff8211610462575060209261043a91369101611b49565b5050517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b80fd5b8382346103a557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a55760209060ff60065460081c1690519015158152f35b50346103d057827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d05760065460ff811615908115610526575b5061050057826104fa600854611ecc565b60085580f35b517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b60ff915060081c16386104e9565b5082906101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a55761056b36611dba565b9261057536611e37565b90600692835460ff8116908115610a9b575b5061050057855184811015610697576106c3574760608701525b8551958487101561069757606086549174ffffffffffffffffffffffffffffffffffffffff00988993602083015160ff7fffffffffffffffffffffff0000000000000000000000000000000000000000009c8d9260081b1693169116171788558381015160015501516002558351908582101561066b57606095969760ff60035492602088015160081b169316911617176003558201519055015160055560017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905580f35b6024876021867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024866021857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85518481101561069757600103610822576020868101516060808901805185517f23b872dd000000000000000000000000000000000000000000000000000000008152338882019081523081880152604081019290925273ffffffffffffffffffffffffffffffffffffffff948516949390918691839182910103818d885af1801561081857916044918694936107fb575b5051918a875195869485937f095ea7b30000000000000000000000000000000000000000000000000000000085527f0000000000000000000000000000000000000000000000000000000000000000168b85015260248401525af180156107f1576107c3575b50505b6105a1565b816107e292903d106107ea575b6107da8183611d79565b810190611eb4565b5086806107bb565b503d6107d0565b83513d89823e3d90fd5b61081190853d87116107ea576107da8183611d79565b508c610755565b86513d8c823e3d90fd5b8551848110156106975760020361096f5773ffffffffffffffffffffffffffffffffffffffff806020880151169082880151823b1561096b5783517f23b872dd00000000000000000000000000000000000000000000000000000000815233868201908152306020820152604081019290925290889082908190606001038183875af180156109615790889161094d575b5050813b156103c457869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af180156109435790869161092f5750506105a1565b61093890611d11565b6103c85784876107bb565b82513d88823e3d90fd5b61095690611d11565b6103c45786896108b3565b84513d8a823e3d90fd5b8780fd5b855184811015610697576003036107be5773ffffffffffffffffffffffffffffffffffffffff806020880151169082880151606089015190833b15610a975784517ff242432a000000000000000000000000000000000000000000000000000000008152338782019081523060208201526040810192909252606082019290925260a06080820181905260009082015288908290819060c001038183875af180156109615790889161094d575050813b156103c457869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af180156109435790869161092f5750506105a1565b8880fd5b60ff915060081c1687610587565b8382346103a557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a5576020906008549051908152f35b50346103d057608092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046257610b20611acd565b50602467ffffffffffffffff81358181116103a157610b429036908701611b18565b50506044358181116103a157610b5b9036908701611b18565b50506064359081116103d057610b749036908601611b49565b60065493915060ff841615908115610e2d575b8115610dec575b8115610ddf575b50610db657600754956001968701968781119788610d8a57610bb681611f40565b9760085483018084119283610d5f57610bd3829397959892611fca565b9b85895b610ce8575b505050908392918794936003549773ffffffffffffffffffffffffffffffffffffffff60ff8a169960081c1694815496600554985b610c56575b508e8e610c528f8f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6101009116176006555192839283611c28565b0390f35b81610cbd578f86821015610cb75790610cab8f610cb1938e8e8e8e858f610c898a985196610c8388611cc6565b876120ab565b602086015284015260608301523090820152610ca58383612097565b52612097565b50611ecc565b8b610c11565b50610c16565b50506011907f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b81999698949399610d3457908c82848995941015610d2757610cab81610d1a93610d106120b7565b610ca58383612097565b9091929993949896610bd7565b5050989293979598610bdc565b89896011877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b87876011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5050506011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b505050517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b601f915016151538610b95565b337f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614159150610b8e565b905060ff8460081c1690610b87565b50346103d057827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d05760065460ff811615908115610e9b575b506105005782610e8c600754611ecc565b60075560025460011c60025580f35b60ff915060081c1638610e7b565b8382346103a557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a55760209060ff6006541690519015158152f35b508290346103a5576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a557610f2736611dba565b92610f3136611e37565b906101043592600693845460ff81169081156112b9575b506112925786518581101561066b5783036111435773ffffffffffffffffffffffffffffffffffffffff8060208901511691823b1561096b5783517f23b872dd00000000000000000000000000000000000000000000000000000000815233868201908152306020820152604081019290925290889082908190606001038183875af180156109615790889161112f575b5050813b156103c457869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af180156109435790869161111b575b50508551958487101561069757606086549174ffffffffffffffffffffffffffffffffffffffff00988993602083015160ff7fffffffffffffffffffffff0000000000000000000000000000000000000000009c8d9260081b1693169116171788558381015160015501516002558351908582101561066b57606095969760ff60035492602088015160081b169316911617176003558201519055015160055560017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905580f35b61112490611d11565b6103c857848761104f565b61113890611d11565b6103c4578689610fd9565b86518581101561066b5760051461115b575b506105a1565b73ffffffffffffffffffffffffffffffffffffffff8060208901511691606089015190833b15610a975784517ff242432a000000000000000000000000000000000000000000000000000000008152338782019081523060208201526040810192909252606082019290925260a06080820181905260009082015288908290819060c001038183875af180156109615761127f575b50813b156103c457869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af180156109435790869161126b575b50611155565b61127490611d11565b6103c8578487611265565b61128b90979197611d11565b95886111f0565b50517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b60ff915060081c1688610f48565b5090346103d057827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d05760065460ff8116159081156114f3575b50156113505750610c52815161131c81611d5d565b8381529282519061132c82611d5d565b81525b6113428351948486958652850190611bb3565b908382036020850152611bb3565b906007549160019283019384841194856114c75761136d81611f40565b9582865b611489575b5050509091926008548101908181118061145d57928294936113988394611f40565b95826003549673ffffffffffffffffffffffffffffffffffffffff60ff89169860081c1693815495600554975b6113dd575b50505050505050505050610c529061132f565b81611431578b8582101561142b57908a61141a828e8b86611406611425985196610c8388611d25565b8c60208701528501528c6060850152612097565b52610cab818d612097565b886113c5565b506113ca565b6024846011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024846011877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8161145d57828110156114c257906114ba8793926114a56120b7565b6114af828c612097565b52610cab818b612097565b909192611371565b611376565b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60ff915060081c1638611307565b508290346103a55760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a55761153b611acd565b611543611af5565b5067ffffffffffffffff6044358181116103c8576115649036908701611b18565b50506064358181116103c85761157d9036908701611b18565b50506084359081116103a1576115969036908601611b49565b90506006549160ff8316159283156117b9575b508215611773575b508115611766575b5061173e576007549260019384019283851194856114c7576115da85611f40565b946008548201938483119182611712576115f78692959496611fca565b9884875b6116a2575b5050509082918593926003549573ffffffffffffffffffffffffffffffffffffffff60ff88169760081c1693815495600554975b611647575b8a5180610c528f8f83611c28565b81611431578c8582101561169c5790610cab81611696938c8f806116778e92519361167185611cc6565b846120ab565b8c60208401528201528c6060820152306080820152610ca58383612097565b89611634565b50611639565b8197959693976116e65790818387949310156116db57808b61141a6116cf936116c96120b7565b92612097565b909192979396956115fb565b509692959496611600565b6024876011867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024856011847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9050517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b601f9150161515846115b9565b90915073ffffffffffffffffffffffffffffffffffffffff807f0000000000000000000000000000000000000000000000000000000000000000169116141590856115b1565b60081c60ff169250866115a9565b8382346103a557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a5576020906007549051908152f35b508290346103a557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a557805161184081611d41565b600190818152835b6020808210156118af5784519085820182811067ffffffffffffffff8211176118835786528682526060828201528383010152602001611848565b60248860418b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b828585886105396118bf8561205b565b51528251926118cd84611d5d565b818452602093846118dd8761205b565b5101528051936118ec85611d41565b601385527f54657374436f6e74726163744f666665726572000000000000000000000000008186015261192782519583875283870190611a6f565b858103828701528651928382528282019083808660051b850101990195925b85841061195357888a0389f35b90919293949596858061199f8c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086869f0301885286838d518051845201519181858201520190611a6f565b9b99019796959190910193019190611946565b849084346103d05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d057357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103d057602092507f1be900b1000000000000000000000000000000000000000000000000000000008114908115611a45575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483611a3e565b919082519283825260005b848110611ab95750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201611a7a565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203611af057565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203611af057565b9181601f84011215611af05782359167ffffffffffffffff8311611af0576020808501948460071b010111611af057565b9181601f84011215611af05782359167ffffffffffffffff8311611af05760208381860195010111611af057565b906006821015611b845752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90815180825260208080930193019160005b828110611bd3575050505090565b909192938260806001928751611bea828251611b77565b8084015173ffffffffffffffffffffffffffffffffffffffff1682850152604080820151908301526060908101519082015201950193929101611bc5565b611c3a60409283835283830190611bb3565b90602090818184039101528080855193848152019401926000905b838210611c6457505050505090565b90919293948360a06001928851611c7c828251611b77565b8084015173ffffffffffffffffffffffffffffffffffffffff9081168386015286820151878401526060808301519084015260809182015116908201520196019493920190611c55565b60a0810190811067ffffffffffffffff821117611ce257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111611ce257604052565b6080810190811067ffffffffffffffff821117611ce257604052565b6040810190811067ffffffffffffffff821117611ce257604052565b6020810190811067ffffffffffffffff821117611ce257604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611ce257604052565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6080910112611af05760405190611df182611d25565b816004356006811015611af057815260243573ffffffffffffffffffffffffffffffffffffffff81168103611af057602082015260443560408201526060606435910152565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c6080910112611af05760405190611e6e82611d25565b816084356006811015611af057815260a43573ffffffffffffffffffffffffffffffffffffffff81168103611af057602082015260c4356040820152606060e435910152565b90816020910312611af057518015158103611af05790565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611ef95760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b67ffffffffffffffff8111611ce25760051b60200190565b90611f4a82611f28565b604090611f5982519182611d79565b8381527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611f878295611f28565b019160005b838110611f995750505050565b6020908251611fa781611d25565b600081528260008183015260008583015260006060830152828601015201611f8c565b90611fd482611f28565b604090611fe382519182611d79565b8381527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06120118295611f28565b019160005b8381106120235750505050565b602090825161203181611cc6565b60008152826000818301526000858301526000606083015260006080830152828601015201612016565b8051156120685760200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80518210156120685760209160051b010190565b6006821015611b845752565b604051906120c482611d25565b8173ffffffffffffffffffffffffffffffffffffffff6000546120ea60ff8216846120ab565b60081c1660208201526001546040820152606060025491015256fea164736f6c6343000811000a";

type TestContractOffererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestContractOffererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestContractOfferer__factory extends ContractFactory {
  constructor(...args: TestContractOffererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    seaport: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestContractOfferer> {
    return super.deploy(
      seaport,
      overrides || {}
    ) as Promise<TestContractOfferer>;
  }
  override getDeployTransaction(
    seaport: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(seaport, overrides || {});
  }
  override attach(address: string): TestContractOfferer {
    return super.attach(address) as TestContractOfferer;
  }
  override connect(signer: Signer): TestContractOfferer__factory {
    return super.connect(signer) as TestContractOfferer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestContractOffererInterface {
    return new utils.Interface(_abi) as TestContractOffererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestContractOfferer {
    return new Contract(address, _abi, signerOrProvider) as TestContractOfferer;
  }
}
