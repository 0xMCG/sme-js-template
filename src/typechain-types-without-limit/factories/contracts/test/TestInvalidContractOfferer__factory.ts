/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestInvalidContractOfferer,
  TestInvalidContractOffererInterface,
} from "../../../contracts/test/TestInvalidContractOfferer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "seaport",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OrderUnavailable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "revertData",
        type: "bytes",
      },
    ],
    name: "RevertWithData",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "available",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "required",
        type: "tuple",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "available",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem",
        name: "required",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
    ],
    name: "activateWithCriteria",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extendAvailable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extendRequired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extraAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "generateOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getInventory",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offerable",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "receivable",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeaportMetadata",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct Schema[]",
        name: "schemas",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "previewOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "orderHashes",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ratifyOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ready",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0346100a257601f611fdb38819003918201601f19168301916001600160401b038311848410176100a7578084926020946040528339810103126100a257516001600160a01b03811681036100a25760805261ffff196006541660065560006007556000600855604051611f1d90816100be8239608051818181610785015281816108ee01528181610a5601528181610dba01528181610fd001526116c80152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260049081361015610022575b505050361561002057600080fd5b005b600092833560e01c90816301ffc9a7146118ec575080632e778efc1461173e5780634a29bec214611701578063582d4241146112b75780635d7f850c1461106d57806366ff49c514610c915780636defbf8014610c4f57806375f9ef5214610be25780639891976514610ae6578063a69ea25c14610aa9578063b6f2634314610534578063b968b399146104aa578063e2d46f9814610465578063f23a6e61146103d45763f4dd92ce0361001257346103d05760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d05767ffffffffffffffff82358181116103c85761011e9036908501611a52565b505060249283358281116103cc57366023820112156103cc5780820135908382116103c457859060a03693020101116103c857604480358381116103c4576101699036908401611a83565b9560649485358181116103c057366023820112156103c05780860135918083116103bc57600590368585841b850101116103b85760209a8b8111806103ad575b6101d6575b8b8b517ff4dd92ce000000000000000000000000000000000000000000000000000000008152f35b8601958b818803126103a95780359182116103a957019a858c96601f80980112156103a5578b8d8c9d9e9c9b9c359161021a61021184611dc4565b9d519d8e611c15565b828d52808d0192861b8201019283116103a157908e809201905b8382106103925750505050885198848a0361031157815b8a811061025c57508c9b9a506101ae565b6102668183611ea2565b51868210156102e6578782861b870101350361028a5761028590611d68565b61024b565b5050505050507f526576657274206f6e20756e6578706563746564206f72646572206861736800939450878751957f08c379a0000000000000000000000000000000000000000000000000000000008752860152840152820152fd5b878460328d7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b508a517f08c379a00000000000000000000000000000000000000000000000000000000081528089018d90526028818701527f526576657274206f6e20756e6578706563746564206f72646572206861736865818901527f73206c656e677468000000000000000000000000000000000000000000000000818c0152608490fd5b81358152908201908201610234565b8380fd5b5080fd5b8c80fd5b50601f8116156101a9565b8b80fd5b8a80fd5b8980fd5b8680fd5b8480fd5b8580fd5b8280fd5b5082346104625760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104625761040d611a07565b50610416611a2f565b506084359067ffffffffffffffff8211610462575060209261043a91369101611a83565b5050517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b80fd5b8382346103a557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a55760209060ff60065460081c1690519015158152f35b50346103d057827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d05760065460ff811615908115610526575b5061050057826104fa600854611d68565b60085580f35b517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b60ff915060081c16386104e9565b5082906101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a55761056b36611c56565b9261057536611cd3565b90600692835460ff8116908115610a9b575b5061050057855184811015610697576106c3574760608701525b8551958487101561069757606086549174ffffffffffffffffffffffffffffffffffffffff00988993602083015160ff7fffffffffffffffffffffff0000000000000000000000000000000000000000009c8d9260081b1693169116171788558381015160015501516002558351908582101561066b57606095969760ff60035492602088015160081b169316911617176003558201519055015160055560017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905580f35b6024876021867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024866021857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85518481101561069757600103610822576020868101516060808901805185517f23b872dd000000000000000000000000000000000000000000000000000000008152338882019081523081880152604081019290925273ffffffffffffffffffffffffffffffffffffffff948516949390918691839182910103818d885af1801561081857916044918694936107fb575b5051918a875195869485937f095ea7b30000000000000000000000000000000000000000000000000000000085527f0000000000000000000000000000000000000000000000000000000000000000168b85015260248401525af180156107f1576107c3575b50505b6105a1565b816107e292903d106107ea575b6107da8183611c15565b810190611d50565b5086806107bb565b503d6107d0565b83513d89823e3d90fd5b61081190853d87116107ea576107da8183611c15565b508c610755565b86513d8c823e3d90fd5b8551848110156106975760020361096f5773ffffffffffffffffffffffffffffffffffffffff806020880151169082880151823b1561096b5783517f23b872dd00000000000000000000000000000000000000000000000000000000815233868201908152306020820152604081019290925290889082908190606001038183875af180156109615790889161094d575b5050813b156103c457869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af180156109435790869161092f5750506105a1565b61093890611bad565b6103c85784876107bb565b82513d88823e3d90fd5b61095690611bad565b6103c45786896108b3565b84513d8a823e3d90fd5b8780fd5b855184811015610697576003036107be5773ffffffffffffffffffffffffffffffffffffffff806020880151169082880151606089015190833b15610a975784517ff242432a000000000000000000000000000000000000000000000000000000008152338782019081523060208201526040810192909252606082019290925260a06080820181905260009082015288908290819060c001038183875af180156109615790889161094d575050813b156103c457869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af180156109435790869161092f5750506105a1565b8880fd5b60ff915060081c1687610587565b8382346103a557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a5576020906008549051908152f35b50346103d05760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d057610b1e611a07565b5067ffffffffffffffff6024358181116103c857610b3f9036908501611a52565b50506044358181116103c857610b589036908501611a52565b50506064359081116103a157601f60449392602095610b9b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09436908701611a83565b92908391519889977f84a87b8e0000000000000000000000000000000000000000000000000000000089528801528160248801528787013785828601015201168101030190fd5b50346103d057827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d05760065460ff811615908115610c41575b506105005782610c32600754611d68565b60075560025460011c60025580f35b60ff915060081c1638610c21565b8382346103a557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a55760209060ff6006541690519015158152f35b508290346103a5576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a557610ccd36611c56565b92610cd736611cd3565b906101043592600693845460ff811690811561105f575b506110385786518581101561066b578303610ee95773ffffffffffffffffffffffffffffffffffffffff8060208901511691823b1561096b5783517f23b872dd00000000000000000000000000000000000000000000000000000000815233868201908152306020820152604081019290925290889082908190606001038183875af1801561096157908891610ed5575b5050813b156103c457869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af1801561094357908691610ec1575b50508551958487101561069757606086549174ffffffffffffffffffffffffffffffffffffffff00988993602083015160ff7fffffffffffffffffffffff0000000000000000000000000000000000000000009c8d9260081b1693169116171788558381015160015501516002558351908582101561066b57606095969760ff60035492602088015160081b169316911617176003558201519055015160055560017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905580f35b610eca90611bad565b6103c8578487610df5565b610ede90611bad565b6103c4578689610d7f565b86518581101561066b57600514610f01575b506105a1565b73ffffffffffffffffffffffffffffffffffffffff8060208901511691606089015190833b15610a975784517ff242432a000000000000000000000000000000000000000000000000000000008152338782019081523060208201526040810192909252606082019290925260a06080820181905260009082015288908290819060c001038183875af1801561096157611025575b50813b156103c457869160448392855194859384927fa22cb4650000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000001689840152600160248401525af1801561094357908691611011575b50610efb565b61101a90611bad565b6103c857848761100b565b61103190979197611bad565b9588610f96565b50517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b60ff915060081c1688610cee565b5090346103d057827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d05760065460ff8116159081156112a9575b50156110fa57506110f681516110c281611bf9565b838152928251906110d282611bf9565b81525b6110e88351948486958652850190611aed565b908382036020850152611aed565b0390f35b9060075491600192830193848411948561127d5761111781611ddc565b9582865b61123f575b5050509091926008548101908181118061121357928294936111428394611ddc565b95826003549673ffffffffffffffffffffffffffffffffffffffff60ff89169860081c1693815495600554975b611187575b505050505050505050506110f6906110d5565b816111e7578b858210156111e157908a6111ca828e8b866111b66111db9851966111b088611bc1565b87611eb6565b8c60208701528501528c6060850152611ea2565b526111d5818d611ea2565b50611d68565b8861116f565b50611174565b6024846011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024846011877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b816112135782811015611278579061127087939261125b611ec2565b611265828c611ea2565b526111d5818b611ea2565b90919261111b565b611120565b5060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60ff915060081c16386110ad565b508290346103a55760a090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d0576112f3611a07565b6112fb611a2f565b5067ffffffffffffffff6044358181116103cc5761131c9036908801611a52565b50506064358181116103cc576113359036908801611a52565b50506084359081116103c85761134e9036908701611a83565b90506006549160ff8316159283156116f3575b5082156116ad575b5081156116a0575b506116785760075493600194850193848611938461127d5761139286611ddc565b95600854880190818911908161164c579482918a966113b28b9995611dc4565b996113bf86519b8c611c15565b848b527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06113ec86611dc4565b01885b8181106116045750508888905b611580575b505050869086906003549460ff86169473ffffffffffffffffffffffffffffffffffffffff809760081c1692815494600554965b6114ca575b505050505050505061145482519683885283880190611aed565b926020928785038489015283808a519687815201990195925b85841061147a57888a0389f35b909192939495968584829b8a51611492828251611ab1565b80840151861682850152868101518783015260608082015190830152608090810151861690820152019a98019695940192919061146d565b819e9c9e9b999b9a989a61155457908b8f9796959493928e8582101561154357816111d5918c8a8661150a61152f98519361150485611b62565b84611eb6565b8b60208401528201528b60608201523060808201526115298383611ea2565b52611ea2565b909192939495969c9e9b999b9a989a611435565b5050509d9b9d9a989a99979961143a565b60248a6011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b819b999b989698979594976115d857908a82848e959410156115c7576111d5816115b6936115ac611ec2565b6115298383611ea2565b909192999b989698979495976113fc565b50509a989a97959796939496611401565b60248760118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b808d899c9e9c602093819d9b9c9a999c519261161f84611b62565b8c84528c869381858701528501528c60608501528c6080850152010152019b999b989698979495976113ef565b6024856011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8390517f84b5ef6b000000000000000000000000000000000000000000000000000000008152fd5b601f915016151585611371565b90915073ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016911614159086611369565b60081c60ff16925087611361565b8382346103a557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a5576020906007549051908152f35b508290346103a557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103a557805161177a81611bdd565b600190818152835b6020808210156117e95784519085820182811067ffffffffffffffff8211176117bd5786528682526060828201528383010152602001611782565b60248860418b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b828585886105396117f985611e66565b515282519261180784611bf9565b8184526020938461181787611e66565b51015280519361182685611bdd565b601385527f54657374436f6e74726163744f6666657265720000000000000000000000000081860152611861825195838752838701906119a9565b858103828701528651928382528282019083808660051b850101990195925b85841061188d57888a0389f35b9091929394959685806118d98c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086869f0301885286838d5180518452015191818582015201906119a9565b9b99019796959190910193019190611880565b849084346103d05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d057357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103d057602092507f1be900b100000000000000000000000000000000000000000000000000000000811490811561197f575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483611978565b919082519283825260005b8481106119f35750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016119b4565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203611a2a57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203611a2a57565b9181601f84011215611a2a5782359167ffffffffffffffff8311611a2a576020808501948460071b010111611a2a57565b9181601f84011215611a2a5782359167ffffffffffffffff8311611a2a5760208381860195010111611a2a57565b906006821015611abe5752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90815180825260208080930193019160005b828110611b0d575050505090565b909192938260806001928751611b24828251611ab1565b8084015173ffffffffffffffffffffffffffffffffffffffff1682850152604080820151908301526060908101519082015201950193929101611aff565b60a0810190811067ffffffffffffffff821117611b7e57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111611b7e57604052565b6080810190811067ffffffffffffffff821117611b7e57604052565b6040810190811067ffffffffffffffff821117611b7e57604052565b6020810190811067ffffffffffffffff821117611b7e57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611b7e57604052565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6080910112611a2a5760405190611c8d82611bc1565b816004356006811015611a2a57815260243573ffffffffffffffffffffffffffffffffffffffff81168103611a2a57602082015260443560408201526060606435910152565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c6080910112611a2a5760405190611d0a82611bc1565b816084356006811015611a2a57815260a43573ffffffffffffffffffffffffffffffffffffffff81168103611a2a57602082015260c4356040820152606060e435910152565b90816020910312611a2a57518015158103611a2a5790565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611d955760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b67ffffffffffffffff8111611b7e5760051b60200190565b90611de682611dc4565b604090611df582519182611c15565b8381527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611e238295611dc4565b019160005b838110611e355750505050565b6020908251611e4381611bc1565b600081528260008183015260008583015260006060830152828601015201611e28565b805115611e735760200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8051821015611e735760209160051b010190565b6006821015611abe5752565b60405190611ecf82611bc1565b8173ffffffffffffffffffffffffffffffffffffffff600054611ef560ff821684611eb6565b60081c1660208201526001546040820152606060025491015256fea164736f6c6343000811000a";

type TestInvalidContractOffererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestInvalidContractOffererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestInvalidContractOfferer__factory extends ContractFactory {
  constructor(...args: TestInvalidContractOffererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    seaport: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestInvalidContractOfferer> {
    return super.deploy(
      seaport,
      overrides || {}
    ) as Promise<TestInvalidContractOfferer>;
  }
  override getDeployTransaction(
    seaport: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(seaport, overrides || {});
  }
  override attach(address: string): TestInvalidContractOfferer {
    return super.attach(address) as TestInvalidContractOfferer;
  }
  override connect(signer: Signer): TestInvalidContractOfferer__factory {
    return super.connect(signer) as TestInvalidContractOfferer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestInvalidContractOffererInterface {
    return new utils.Interface(_abi) as TestInvalidContractOffererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestInvalidContractOfferer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestInvalidContractOfferer;
  }
}
