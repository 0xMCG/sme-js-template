/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestTransferValidationZoneOfferer,
  TestTransferValidationZoneOffererInterface,
} from "../../../contracts/test/TestTransferValidationZoneOfferer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedOfferRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualBalance",
        type: "uint256",
      },
    ],
    name: "IncorrectSeaportBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualBalance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "checkedAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "checkedToken",
        type: "address",
      },
    ],
    name: "InvalidERC1155Balance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualBalance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "checkedAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "checkedToken",
        type: "address",
      },
    ],
    name: "InvalidERC20Balance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualBalance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "checkedAddress",
        type: "address",
      },
    ],
    name: "InvalidNativeTokenBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "actualOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "checkedToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "checkedTokenId",
        type: "uint256",
      },
    ],
    name: "InvalidOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
    ],
    name: "ValidateOrderDataHash",
    type: "event",
  },
  {
    inputs: [],
    name: "callCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "called",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "a",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "b",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "c",
        type: "bytes",
      },
    ],
    name: "generateOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeaportMetadata",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct Schema[]",
        name: "schemas",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderHashToValidateOrderDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "a",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "b",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "previewOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "minimumReceived",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "maximumSpent",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ratifyOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedOfferRecipient",
        type: "address",
      },
    ],
    name: "setExpectedOfferRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "fulfiller",
            type: "address",
          },
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct SpentItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ReceivedItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "orderHashes",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ZoneParameters",
        name: "zoneParameters",
        type: "tuple",
      },
    ],
    name: "validateOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "validOrderMagicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60803461007f57601f6119f638819003918201601f19168301916001600160401b038311848410176100845780849260209460405283398101031261007f57516001600160a01b0381169081900361007f5760ff1960025416600255600060035560018060a01b0319600054161760005560405161195b908161009b8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a7146100e357806314a94f6a146100da57806317b1f942146100d15780632e778efc146100c85780634b28f9a2146100bf57806350f9b6cd146100b6578063582d4241146100ad57806398919765146100a4578063db70a8911461009b5763f4dd92ce0361000e57610096610a3b565b61000e565b506100966109bf565b5061009661092c565b50610096610877565b50610096610687565b5061009661064a565b50610096610549565b50610096610277565b506100966101f7565b50346101d45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d4576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101d457807f1be900b100000000000000000000000000000000000000000000000000000000602092149081156101aa575b8115610180575b506040519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610175565b7f3839be19000000000000000000000000000000000000000000000000000000008114915061016e565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116036101d457565b50346101d45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d45773ffffffffffffffffffffffffffffffffffffffff600435610248816101d9565b167fffffffffffffffffffffffff00000000000000000000000000000000000000006000541617600055600080f35b50346101d4577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020813601126101d45760043567ffffffffffffffff81116101d457610140816004019282360301126101d4577f1159d6c2ab0c67c2c3ef3bbf500ac044e1f3998cd3fec5b2475d1697ec425fe6610329604051602081019036600083373690523690208061031886356000526001602052604060002090565b556040519081529081906020820190565b0390a1333180610408575061038761038d9261035161034b6084850183610b36565b906111bc565b60005473ffffffffffffffffffffffffffffffffffffffff16806103ff5750606461037e60248501610b8a565b935b0190610b97565b91611383565b6103bd60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006002541617600255565b6103d06103cb600354610beb565b600355565b6040517f17b1f942000000000000000000000000000000000000000000000000000000008152602090f35b0390f35b60649093610380565b6040517f4d3b8ba3000000000000000000000000000000000000000000000000000000008152600060048201526024810191909152604490fd5b0390fd5b919082519283825260005b8481106104905750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610451565b6104b660409283835283830190610446565b906020908181840391015283519182815281810182808560051b8401019601946000925b8584106104eb575050505050505090565b909192939495968580610538837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0866001960301885286838d518051845201519181858201520190610446565b9901940194019295949391906104da565b50346101d4576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261064757604080519061058882610ded565b6021825260207f546573745472616e7366657256616c69646174696f6e5a6f6e654f6666657265818401527f7200000000000000000000000000000000000000000000000000000000000000828401528151936105e485610da8565b60018552805b828110610625575050906103fb9161053961060486611064565b515261060e6110a0565b9061061886611064565b51015251928392836104a4565b8290845161063281610da8565b838152606083820152828289010152016105ea565b80fd5b50346101d45760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d4576020600354604051908152f35b50346101d45760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d457602060ff600254166040519015158152f35b9181601f840112156101d45782359167ffffffffffffffff83116101d4576020808501948460071b0101116101d457565b9181601f840112156101d45782359167ffffffffffffffff83116101d457602083818601950101116101d457565b6006111561073257565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9060068210156107325752565b906040908183019180845281518093526060938481019360208094019060005b81811061082157505050828185039101528180865194858152019501936000915b8483106107bf5750505050505090565b9091929394958460a060019289516107d8828251610761565b8084015173ffffffffffffffffffffffffffffffffffffffff908116838601528682015187840152878201518884015260809182015116908201520197019594930191906107af565b909196939495866080600192878b5161083b838251610761565b8085015173ffffffffffffffffffffffffffffffffffffffff16838601528a8101518b840152015188820152969996019796950192910161078e565b50346101d45760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d4576108b26004356101d9565b6108bd6024356101d9565b67ffffffffffffffff6044358181116101d4576108de9036906004016106c9565b906064358381116101d4576108f79036906004016106c9565b9290916084359485116101d45761091561091c9536906004016106fa565b5050610c47565b906103fb6040519283928361076e565b50346101d45760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d4576109676004356101d9565b67ffffffffffffffff6024358181116101d4576109889036906004016106c9565b906044358381116101d4576109a19036906004016106c9565b9290916064359485116101d45761091561091c9536906004016106fa565b50346101d45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d45760043560005260016020526020604060002054604051908152f35b9181601f840112156101d45782359167ffffffffffffffff83116101d4576020808501948460051b0101116101d457565b50346101d45760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d45767ffffffffffffffff6004358181116101d457610a8c9036906004016106c9565b90602435918383116101d457366023840112156101d45782600401358481116101d45736602460a08302860101116101d4576044358581116101d457610ad69036906004016106fa565b9390926064359687116101d4576024610b0396610afa6103fb993690600401610a0a565b50500191610f44565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681529081906020820190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156101d4570180359067ffffffffffffffff82116101d4576020019160a08202360383136101d457565b35610b94816101d9565b90565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156101d4570180359067ffffffffffffffff82116101d457602001918160071b360383136101d457565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c185760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91939293610c5485610e4a565b94604090610c6482519788610e09565b8087527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610c9182610e4a565b0160005b818110610d6157505060005b818110610cbc575050505090610cb8913691610ee8565b9190565b610cc7818386611102565b90610cd06110d7565b508135610cdc81610e71565b6020928381013591610ced836101d9565b865192610cf984610dd1565b600682101561073257610d5c95610d2992855284019073ffffffffffffffffffffffffffffffffffffffff169052565b808601358287015260609081013590820152306080820152610d4b828b61107e565b52610d56818a61107e565b50610beb565b610ca1565b602090610d6c6110d7565b82828c01015201610c95565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610dc457604052565b610dcc610d78565b604052565b60a0810190811067ffffffffffffffff821117610dc457604052565b6060810190811067ffffffffffffffff821117610dc457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610dc457604052565b60209067ffffffffffffffff8111610e64575b60051b0190565b610e6c610d78565b610e5d565b600611156101d457565b91908260809103126101d4576040516080810181811067ffffffffffffffff821117610edb575b60405260608082948035610eb581610e71565b84526020810135610ec5816101d9565b6020850152604081013560408501520135910152565b610ee3610d78565b610ea2565b90929192610ef581610e4a565b90610f036040519283610e09565b819481835260208093019160071b8401938185116101d457915b848310610f2b575050505050565b83608091610f398486610e7b565b815201920191610f1d565b9290939491333180610ffc575090610f5b916111bc565b60005473ffffffffffffffffffffffffffffffffffffffff1680610ff057506014116101d457610f8e923560601c611383565b610fbe60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006002541617600255565b610fc9600354610beb565b6003557ff4dd92ce0000000000000000000000000000000000000000000000000000000090565b9050610f8e9350611383565b604490604051907f4d3b8ba3000000000000000000000000000000000000000000000000000000008252600060048301526024820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602090805115611072570190565b61107a611034565b0190565b6020918151811015611093575b60051b010190565b61109b611034565b61108b565b6040516020810181811067ffffffffffffffff8211176110ca575b60405260008152906000368137565b6110d2610d78565b6110bb565b604051906110e482610dd1565b60006080838281528260208201528260408201528260608201520152565b9190811015611113575b60071b0190565b61111b611034565b61110c565b9160a09181101561113057020190565b611138611034565b020190565b60a0813603126101d45760806040519160a0830183811067ffffffffffffffff8211176111af575b604052803561117381610e71565b83526020810135611183816101d9565b6020840152604081013560408401526060810135606084015201356111a7816101d9565b608082015290565b6111b7610d78565b611165565b906111c56110d7565b5060005b8181106111d557505050565b806111ec6111e7611255938587611120565b61113d565b611229611210608083015173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b815161123481610728565b61123d81610728565b8061125a575060606112509201516114a9565b610beb565b6111c9565b61126381610728565b6001810361129c5750816112966020606061125095015192015173ffffffffffffffffffffffffffffffffffffffff1690565b90611526565b6112a581610728565b600281036112de5750816112d86020604061125095015192015173ffffffffffffffffffffffffffffffffffffffff1690565b906116b0565b806112ea600392610728565b146112f7575b5050610beb565b81606061132d930151906113276020604083015192015173ffffffffffffffffffffffffffffffffffffffff1690565b916117c7565b38806112f0565b604051906080820182811067ffffffffffffffff82111761136b575b60405260006060838281528260208201528260408201520152565b611373610d78565b611350565b610b94903690610e7b565b909161138d611334565b5060005b81811061139e5750505050565b806113b56113b06113dd938588611102565b611378565b8481516113c181610728565b6113ca81610728565b806113e2575060606112509201516114a9565b611391565b6113eb81610728565b6001810361141e5750816112966020606061125095015192015173ffffffffffffffffffffffffffffffffffffffff1690565b61142781610728565b6002810361145a5750816112d86020604061125095015192015173ffffffffffffffffffffffffffffffffffffffff1690565b80611466600392610728565b14611472575050610beb565b8160606114a2930151906113276020604083015192015173ffffffffffffffffffffffffffffffffffffffff1690565b38846112f0565b90803182116114b6575050565b9073ffffffffffffffffffffffffffffffffffffffff8260649331604051937f1190a13400000000000000000000000000000000000000000000000000000000855260048501526024840152166044820152fd5b908160209103126101d4575190565b506040513d6000823e3d90fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff8581166004840152602096959394939290841691908781602481865afa9081156116a3575b600091611686575b50851161159f5750505050509050565b60405190815273ffffffffffffffffffffffffffffffffffffffff83166004820152869550908590829060249082905afa948515611679575b600095611642575b50506040517fee075b4a0000000000000000000000000000000000000000000000000000000081526004810193909352602483019390935273ffffffffffffffffffffffffffffffffffffffff92831660448301529091166064820152608490fd5b61044293929550908161166992903d10611672575b6116618183610e09565b81019061150a565b939091856115e0565b503d611657565b611681611519565b6115d8565b61169d9150883d8a11611672576116618183610e09565b3861158f565b6116ab611519565b611587565b6040517f6352211e00000000000000000000000000000000000000000000000000000000815260048101829052929173ffffffffffffffffffffffffffffffffffffffff6020856024818486165afa9485156117ba575b60009561177e575b50808516908416036117215750505050565b6040517f38fb386a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152938316602485015290911660448301526064820152608490fd5b90946020823d82116117b2575b8161179860209383610e09565b810103126106475750516117ab816101d9565b933861170f565b3d915061178b565b6117c2611519565b611707565b6040517efdd58e0000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff8681166004840152602483018590529096956020959394909290918416908681604481855afa908115611941575b600091611924575b508511611849575050505050509050565b60405188815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101929092528590829060449082905afa948515611917575b6000956118f0575b50506040517f17720d600000000000000000000000000000000000000000000000000000000081526004810193909352602483019390935273ffffffffffffffffffffffffffffffffffffffff92831660448301529091166064820152608490fd5b61044293929550908161190e92903d10611672576116618183610e09565b9390918561188e565b61191f611519565b611886565b61193b9150873d8911611672576116618183610e09565b38611838565b611949611519565b61183056fea164736f6c6343000811000a";

type TestTransferValidationZoneOffererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTransferValidationZoneOffererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestTransferValidationZoneOfferer__factory extends ContractFactory {
  constructor(...args: TestTransferValidationZoneOffererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    expectedOfferRecipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestTransferValidationZoneOfferer> {
    return super.deploy(
      expectedOfferRecipient,
      overrides || {}
    ) as Promise<TestTransferValidationZoneOfferer>;
  }
  override getDeployTransaction(
    expectedOfferRecipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(expectedOfferRecipient, overrides || {});
  }
  override attach(address: string): TestTransferValidationZoneOfferer {
    return super.attach(address) as TestTransferValidationZoneOfferer;
  }
  override connect(signer: Signer): TestTransferValidationZoneOfferer__factory {
    return super.connect(signer) as TestTransferValidationZoneOfferer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTransferValidationZoneOffererInterface {
    return new utils.Interface(
      _abi
    ) as TestTransferValidationZoneOffererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTransferValidationZoneOfferer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestTransferValidationZoneOfferer;
  }
}
