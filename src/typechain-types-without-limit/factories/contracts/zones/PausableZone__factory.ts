/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PausableZone,
  PausableZoneInterface,
} from "../../../contracts/zones/PausableZone";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotPotentialOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidController",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPauser",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerCanNotBeSetAsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PauserCanNotBeSetAsZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "zone",
        type: "address",
      },
    ],
    name: "ZoneAlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "OperatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newPauser",
        type: "address",
      },
    ],
    name: "PauserUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newPotentialOwner",
        type: "address",
      },
    ],
    name: "PotentialOwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "zone",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "ZoneCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operatorToAssign",
        type: "address",
      },
    ],
    name: "assignOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SeaportInterface",
        name: "seaport",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            internalType: "address",
            name: "zone",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
            ],
            internalType: "struct OfferItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ConsiderationItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "enum OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "conduitKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "counter",
            type: "uint256",
          },
        ],
        internalType: "struct OrderComponents[]",
        name: "orders",
        type: "tuple[]",
      },
    ],
    name: "cancelOrders",
    outputs: [
      {
        internalType: "bool",
        name: "cancelled",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SeaportInterface",
        name: "seaport",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "orderIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "itemIndex",
                type: "uint256",
              },
            ],
            internalType: "struct FulfillmentComponent[]",
            name: "offerComponents",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "orderIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "itemIndex",
                type: "uint256",
              },
            ],
            internalType: "struct FulfillmentComponent[]",
            name: "considerationComponents",
            type: "tuple[]",
          },
        ],
        internalType: "struct Fulfillment[]",
        name: "fulfillments",
        type: "tuple[]",
      },
    ],
    name: "executeMatchAdvancedOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ReceivedItem",
            name: "item",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "conduitKey",
            type: "bytes32",
          },
        ],
        internalType: "struct Execution[]",
        name: "executions",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SeaportInterface",
        name: "seaport",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Order[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "orderIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "itemIndex",
                type: "uint256",
              },
            ],
            internalType: "struct FulfillmentComponent[]",
            name: "offerComponents",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "orderIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "itemIndex",
                type: "uint256",
              },
            ],
            internalType: "struct FulfillmentComponent[]",
            name: "considerationComponents",
            type: "tuple[]",
          },
        ],
        internalType: "struct Fulfillment[]",
        name: "fulfillments",
        type: "tuple[]",
      },
    ],
    name: "executeMatchOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ReceivedItem",
            name: "item",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "conduitKey",
            type: "bytes32",
          },
        ],
        internalType: "struct Execution[]",
        name: "executions",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeaportMetadata",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct Schema[]",
        name: "schemas",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
    ],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "fulfiller",
            type: "address",
          },
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct SpentItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ReceivedItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "orderHashes",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ZoneParameters",
        name: "",
        type: "tuple",
      },
    ],
    name: "validateOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "validOrderMagicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60a0806040523461006457336080527fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933600080a1611613908161006a8239608051818181610252015281816102ca015281816103f2015281816108580152610c680152f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714610d095750806317b1f94214610c905780632718034d14610aa15780632e778efc146108d2578063570ca7351461088057806365c4eb721461044057806376a67a51146103a257806384385c6f1461027a5763e5c27af11461008257600080fd5b346101b45760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576100b9610dc5565b60243567ffffffffffffffff81116101b4576100d9903690600401610de8565b9173ffffffffffffffffffffffffffffffffffffffff80600054163314158061024e575b610224576040929192519283917ffd9f1e10000000000000000000000000000000000000000000000000000000008352602483019386602097889687600488015252604485019060448160051b8701019280926000915b8383106101cc5750505050508391826000920393165af19081156101c057600091610185575b506040519015158152f35b90508181813d83116101b9575b61019c8183610f93565b810103126101b4575180151581036101b4573861017a565b600080fd5b503d610192565b6040513d6000823e3d90fd5b92959798610211867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc8394979a9c600196990301875261020c8a876111ea565b610fd4565b9701930193018997959389979592610154565b60046040517fccea9e6f000000000000000000000000000000000000000000000000000000008152fd5b50807f0000000000000000000000000000000000000000000000000000000000000000163314156100fd565b346101b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576102b1610dc5565b73ffffffffffffffffffffffffffffffffffffffff90817f00000000000000000000000000000000000000000000000000000000000000001633036103785716801561034e576020817fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec4927fffffffffffffffffffffffff00000000000000000000000000000000000000006000541617600055604051908152a1005b60046040517f5384e6f5000000000000000000000000000000000000000000000000000000008152fd5b60046040517f6d5769be000000000000000000000000000000000000000000000000000000008152fd5b346101b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b4576103d9610dc5565b73ffffffffffffffffffffffffffffffffffffffff90817f0000000000000000000000000000000000000000000000000000000000000000163303610378577f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752600080a116ff5b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b457610472610dc5565b60243567ffffffffffffffff81116101b457610492903690600401610de8565b919060443567ffffffffffffffff81116101b4576104b4903690600401610de8565b60649291923567ffffffffffffffff81116101b4576104d7903690600401610de8565b92909173ffffffffffffffffffffffffffffffffffffffff6000541633141580610840575b6102245795929190936040519687957ff2d12b120000000000000000000000000000000000000000000000000000000087528560848801608060048a01525260a487019560a48160051b89010196826000905b83821061075d5750505050507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc868603016024870152808552602085019060208160051b87010195836000915b83831061064757896000818d81806105df8f8f8f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8584030160448601526114f0565b336064830152039173ffffffffffffffffffffffffffffffffffffffff3491165af180156101c05761062091600091610624575b5060405191829182610e55565b0390f35b61064191503d806000833e6106398183610f93565b81019061123d565b82610613565b919395969790929498507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08282030186526106828984611598565b80358252602081013560028110156101b4576020830152604081013560408301526060808201359083015260808101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156101b457016020813591019167ffffffffffffffff82116101b4578160051b9182360384136101b457807f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9160a0806080860152840152116101b4576001928260209392849360c0938483013701019a019601930190918a98979695949261059c565b91939697987fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5c6001929496979b82030185526107998884611598565b9061082b6107b76107aa84806111ea565b60a0808552840190610fd4565b926effffffffffffffffffffffffffffff9261081d6108126020968688976107e089880161157c565b16888601526107f16040870161157c565b16604085015260606108058187018761139d565b91868403908701526113ed565b92608081019061139d565b9160808185039101526113ed565b9801940192018b99959492919897969861054f565b5073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163314156104fc565b346101b45760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b457602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b346101b45760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b45760405161090d81610f77565b600180825260005b6020908181101561098557604051604081019281841067ffffffffffffffff8511176109565760209360405260008252606081830152828601015201610915565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8284610bbb610993826115ca565b51526040519060209182810181811067ffffffffffffffff8211176109565760409492945260008152826109c6856115ca565b510152604051916109d683610f77565b600c83527f5061757361626c655a6f6e65000000000000000000000000000000000000000081840152610a1460405193604085526040850190610ef8565b90838203818501528451908183528083019281808460051b8301019701936000915b848310610a435787890388f35b9091929394958480610a8f8b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086869e030187526040838c518051845201519181858201520190610ef8565b9a980196959491909101920190610a36565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6060813601126101b457610ad4610dc5565b67ffffffffffffffff91906024358381116101b457610af7903690600401610de8565b936044359081116101b457610b10903690600401610de8565b9073ffffffffffffffffffffffffffffffffffffffff94856000541633141580610c64575b6102245795939291906040519687957fa81744040000000000000000000000000000000000000000000000000000000087528060448801604060048a015252606487019060648160051b8901019580926000915b838310610bd35750896000818d818d81610bae8f8f8f8f8584030160248601526114f0565b03923491165af180156101c05761062091600091610624575060405191829182610e55565b91939899887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c610c41926001949698999a9b03018552610c4e610c168c8661142c565b91610c32610c2484806111ea565b604083526040830190610fd4565b9060209484868096019061139d565b91858185039101526113ed565b9a019301930190928b9998979695949293610b89565b50857f000000000000000000000000000000000000000000000000000000000000000016331415610b35565b346101b4577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020813601126101b4576004359067ffffffffffffffff82116101b45761014091360301126101b45760206040517f17b1f942000000000000000000000000000000000000000000000000000000008152f35b346101b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101b457600435907fffffffff0000000000000000000000000000000000000000000000000000000082168092036101b457817f3839be190000000000000000000000000000000000000000000000000000000060209314908115610d9b575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483610d94565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101b457565b9181601f840112156101b45782359167ffffffffffffffff83116101b4576020808501948460051b0101116101b457565b906006821015610e265752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60208082019080835283518092528060408094019401926000905b838210610e7f57505050505090565b90919293948360e06001928489518051610e9a848251610e19565b73ffffffffffffffffffffffffffffffffffffffff9081878201511687860152838101518486015260608082015190860152816080809201511690850152858201511660a0840152015160c082015201960192019093929193610e70565b919082519283825260005b848110610f425750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610f03565b359073ffffffffffffffffffffffffffffffffffffffff821682036101b457565b6040810190811067ffffffffffffffff82111761095657604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761095657604052565b610160919073ffffffffffffffffffffffffffffffffffffffff83830181610ffb84610f56565b1684526020918061100d848601610f56565b1683860152604080850135937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18636030194858112156101b45786019481863596019567ffffffffffffffff998a82116101b45760a096878302360389136101b4578291868c0152526101808901969060005b81811061119a5750505060609081880135908112156101b45787019282843594019984116101b45760c09687850236038b136101b457898103838b015284815283019994939260009291905b84841061112a5750505050505050608083013560058110156101b45760808501528083013590840152808201359083015260e081013560e0830152610100808201359083015261012080820135908301526101408091013591015290565b9091929394959a8b3560068110156101b457611152838e61114c858c95610e19565b01610f56565b1682820152828c013583820152838c0135848201526080808d013590820152878c0135908782168092036101b4578881019190915288019a88019594936001019291906110cc565b90919788359060068210156101b4578881896111be898e61114c8697600199610e19565b16818901528b890135898201526060808d0135908201526080808d013590820152019901929101611080565b90357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1823603018112156101b4570190565b519073ffffffffffffffffffffffffffffffffffffffff821682036101b457565b90602080838303126101b457825167ffffffffffffffff938482116101b457019082601f830112156101b45781519284841161095657604094855195611288848760051b0188610f93565b858752838701928460e0809802870101958187116101b4578501935b8685106112b657505050505050505090565b848203908882126101b457835190606091828101928184108885111761136f5760a08095126101b45761010082018481108982111761136f578752885160068110156101b45784526113098a8a0161121c565b9060809182840152878a0151868401528901519060c0918284015289015173ffffffffffffffffffffffffffffffffffffffff811681036101b4578c958b95611359928886015284528a0161121c565b84830152880151868201528152019401936112a4565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156101b457016020813591019167ffffffffffffffff82116101b45781360383136101b457565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1823603018112156101b4570190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156101b457016020813591019167ffffffffffffffff82116101b4578160061b360383136101b457565b9190808252602080920192916000905b8282106114cf575050505090565b833585528381013585820152604094850194909301926001909101906114c1565b90808352602080930192838260051b850194846000925b858410611518575050505050505090565b90919293949596858061156b83856001950388526115368c8861142c565b9061155e611554611547848061145e565b60408086528501916114b1565b928581019061145e565b91858185039101526114b1565b990194019401929594939190611507565b35906effffffffffffffffffffffffffffff821682036101b457565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61823603018112156101b4570190565b8051156115d75760200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c6343000811000a";

type PausableZoneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PausableZoneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PausableZone__factory extends ContractFactory {
  constructor(...args: PausableZoneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PausableZone> {
    return super.deploy(overrides || {}) as Promise<PausableZone>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PausableZone {
    return super.attach(address) as PausableZone;
  }
  override connect(signer: Signer): PausableZone__factory {
    return super.connect(signer) as PausableZone__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PausableZoneInterface {
    return new utils.Interface(_abi) as PausableZoneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PausableZone {
    return new Contract(address, _abi, signerOrProvider) as PausableZone;
  }
}
